[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/abs/abs.js",
    "memberof": null,
    "longname": "src/0-legacy/abs/abs.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/**\n * COMPUTE THE ABSOLUTE VALUE OF NUMBER n\n */\n\n// exports.abs = function abs() {};\n"
  },
  {
    "__docId__": 1,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/abs/index.js",
    "memberof": null,
    "longname": "src/0-legacy/abs/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './abs' ;\n"
  },
  {
    "__docId__": 2,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/add/add.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/add/add.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "\n/**\n * @param {int} r base (radix)\n */\n\n\nexport function badd_t (r) {\n\n\n\t/**\n\t * Adds two big endian arrays, k >= i >= j\n\t * wraps\n\t *\n\t * @param {array} a first operand\n\t * @param {int} i0 a left\n\t * @param {int} i1 a right\n\t * @param {array} b second operand\n\t * @param {int} j0 b left\n\t * @param {int} j1 b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} k0 c left\n\t * @param {int} k1 c right\n\t */\n\n\treturn function(a, i0, i1, b, j0, j1, c, k0, k1){\n\t\tvar t, C = 0;\n\n\t\twhile(--j1 >= j0){\n\t\t\t--i1; --k1;\n\t\t\tt = a[i1] + b[j1] + C;\n\t\t\tc[k1] = t % r;\n\t\t\tC = t / r >= 1;\n\t\t}\n\n\t\twhile(--i1 >= i0){\n\t\t\t--k1;\n\t\t\tt = a[i1] + C;\n\t\t\tc[k1] = t % r;\n\t\t\tC = t / r >= 1;\n\t\t}\n\n\t\tif(--k1 >= k0){\n\t\t\tc[k1] = +C;\n\t\t}\n\n\t};\n\n};\n\n\n/**\n * @param {int} r base (radix)\n */\n\nexport function ladd_t (r){\n\n\t/**\n\t * Adds two little endian arrays, k >= i >= j\n\t * wraps\n\t *\n\t * @param {array} a first operand\n\t * @param {int} i0 a left\n\t * @param {int} i1 a right\n\t * @param {array} b second operand\n\t * @param {int} j0 b left\n\t * @param {int} j1 b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} k0 c left\n\t * @param {int} k1 c right\n\t */\n\n\treturn function(a, i0, i1, b, j0, j1, c, k0, k1){\n\t\tvar t, C = 0;\n\n\t\twhile(j0 < j1){\n\t\t\tt = a[i0] + b[j0] + C;\n\t\t\tc[k0] = t % r;\n\t\t\tC = t / r >= 1;\n\t\t\t++i0; ++j0; ++k0;\n\t\t}\n\n\t\twhile(i0 < i1){\n\t\t\tt = a[i0] + C;\n\t\t\tc[k0] = t % r;\n\t\t\tC = t / r >= 1;\n\t\t\t++i0; ++k0;\n\t\t}\n\n\t\tif(k0 < k1){\n\t\t\tc[k0] = +C;\n\t\t}\n\n\t};\n}\n"
  },
  {
    "__docId__": 3,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "badd_t",
    "memberof": "src/0-legacy/arithmetic/add/add.js",
    "longname": "src/0-legacy/arithmetic/add/add.js~badd_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/add/add.js",
    "importStyle": "{badd_t}",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "base (radix)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 4,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ladd_t",
    "memberof": "src/0-legacy/arithmetic/add/add.js",
    "longname": "src/0-legacy/arithmetic/add/add.js~ladd_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/add/add.js",
    "importStyle": "{ladd_t}",
    "description": "",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "base (radix)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 5,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/add/index.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/add/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './add' ;\n"
  },
  {
    "__docId__": 6,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/div/dcdiv.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/div/dcdiv.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "\n// https://gmplib.org/manual/Divide-and-Conquer-Division.html\n"
  },
  {
    "__docId__": 7,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/div/div.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/div/div.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "\n\n\nexport const bdiv_t = function(lt, sub){\n\n\t/**\n\t * Computes quotient and remainder of two big endian arrays.\n\t * <p>\n\t * Computes quotient and remainder of two big endian arrays\n\t * using long division algorithm (the one teached in\n\t * european primary schools).\n\t *\n\t * /!\\ This algorithm modifies its first operand.\n\t *\n\t * HYP : q is at least as large as r\n\t *       b is not zero\n\t *\n\t * @param {array} r dividend and remainder\n\t * @param {int} ri r left\n\t * @param {int} rj r right\n\t * @param {array} b divisor\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t * @param {array} q quotient, must be 0 initialized\n\t * @param {int} qi q left\n\t */\n\n\t// /!\\ There are implicit hypotheses\n\t//     made on the size of the operands.\n\t//     Should clarify.\n\n\tvar div = function(r, ri, rj, b, bi, bj, q, qi){\n\t\tvar k, t = ri + 1;\n\n\t\tdo {\n\n\t\t\t// trim leading zeros\n\t\t\t//     - maybe could try to put this procedure inside the sub loop\n\t\t\t//     - or assume that the number is trimed at the begining\n\t\t\t//       and put this statement at the end of the main loop\n\t\t\twhile (ri < rj && r[ri] === 0) ++ri;\n\n\t\t\t// search for a remainder block interval\n\t\t\t// greater than the divisor\n\t\t\t//     - maybe could try binary search on the lt function\n\t\t\t//     for another implementation\n\t\t\tk = ri + 1;\n\t\t\twhile (k <= rj && lt(r, ri, k, b, bi, bj)) ++k;\n\n\t\t\t// remainder smaller than divisor --> end\n\t\t\tif (k > rj) break;\n\n\t\t\t// divide current block interval by quotient\n\t\t\tdo{\n\n\t\t\t\t// increment quotient block corresponding\n\t\t\t\t// to current ls block of remainder interval\n\t\t\t\t++q[qi + k - t];\n\n\t\t\t\t// subtract divisor from current remainder\n\t\t\t\t// block interval\n\t\t\t\tsub(r, ri, k, b, bi, bj, r, ri, k);\n\n\t\t\t} while(!lt(r, ri, k, b, bi, bj));\n\n\n\t\t} while(true);\n\n\t};\n\n\treturn div;\n\n};\n"
  },
  {
    "__docId__": 8,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bdiv_t",
    "memberof": "src/0-legacy/arithmetic/div/div.js",
    "longname": "src/0-legacy/arithmetic/div/div.js~bdiv_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/div/div.js",
    "importStyle": "{bdiv_t}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "lt",
        "types": [
          "*"
        ]
      },
      {
        "name": "sub",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 9,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/div/fourierdiv.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/div/fourierdiv.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "\n// http://en.wikipedia.org/wiki/Fourier_division\n"
  },
  {
    "__docId__": 10,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/div/index.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/div/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './dcdiv' ;\nexport * from './div' ;\nexport * from './fourierdiv' ;\nexport * from './knuthd' ;\n"
  },
  {
    "__docId__": 11,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/div/knuthd.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/div/knuthd.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "\n// http://books.google.be/books?id=VicPJYM0I5QC&pg=PA184&lpg=PA184&dq=knuth+algorithm+d&source=bl&ots=2n-NJWuw1o&sig=47hDkFG780BqE2mmi9OMPqbK4Fs&hl=en&sa=X&ei=_ioMVKbKFMawOZT_gaAH&ved=0CDkQ6AEwAw#v=onepage&q=knuth%20algorithm%20d&f=false\n"
  },
  {
    "__docId__": 12,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/index.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './add' ;\nexport * from './div' ;\nexport * from './mul' ;\nexport * from './sub' ;\n"
  },
  {
    "__docId__": 13,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/mul/index.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/mul/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './karatsuba' ;\nexport * from './mul' ;\nexport * from './mul53' ;\nexport * from './toomcook' ;\n"
  },
  {
    "__docId__": 14,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/mul/karatsuba.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/mul/karatsuba.js",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "content": "/**\n * /!\\ BLOCK MULTIPLICATION RESULT MUST HOLD IN THE JAVASCRIPT NUMBER TYPE (DOUBLE i.e. 53 bits)\n *\n * EXPLANATION\n * ###########\n *\n * We consider the numbers a and b, both of size N = 2n.\n *\n * We divide a and b into their lower and upper parts.\n *\n * a = a1 r^{n} + a0 (1)\n * b = b1 r^{n} + b0 (2)\n *\n * We express the product of a and b using their lower and upper parts.\n *\n * a b = (a1 r^{n} + a0) (b1 r^{n} + b0) (3)\n *     = a1 b1 r^{2n} + (a1 b0 + a0 b1) r^{n} + a0 b0 (4)\n *\n * This gives us 4 multiplications with operands of size n.\n * Using a simple trick, we can reduce this computation to 3 multiplications.\n *\n * We give the 3 terms of (4) the names z0, z1 and z2.\n *\n * z2 = a1 b1\n * z1 = a1 b0 + a0 b1\n * z0 = a0 b0\n *\n * a b  = z2 r^{2n} + z1 r^{n} + z0\n *\n * We then express z1 using z0, z2 and one additional multiplication.\n *\n * (a1 + a0)(b1 + b0) = a1 b1 + a0 b0 + (a1 b0 + a0 b1)\n *                    = z2 + z0 + z1\n *\n * z1 = (a1 + a0)(b1 + b0) - z2 - z0\n *\n * AN ANOTHER WAY AROUND (not used here)\n *\n * (a1 - a0)(b1 - b0) = (a1 b1 + a0 b0) - (a1 b0 + a0 b1)\n * (a0 - a1)(b1 - b0) = (a1 b0 + a0 b1) - (a1 b1 + a0 b0)\n * a b = (r^{2n} + r^{n})a1 b1 + r^{n}(a0 - a1)(b1 - b0) + (r^{n} + 1)a0 b0\n *\n * This algorithm is a generalization of the Toom-Cook algorithm, when m = n = 2.\n *\n * For further reference, see\n *  - http://en.wikipedia.org/wiki/Karatsuba_algorithm\n *  - http://en.wikipedia.org/wiki/Toom–Cook_multiplication\n *\n * @param {function} add addition algorithm\n * @param {function} sub subtraction algorithm\n * @param {function} mul multiplication algorithm\n * @param {function} calloc array allocator\n * @param {function} mov copy algorithm\n * @param {uint} r base (radix)\n * @param {function} wrap recursive multiplication algorithm\n *\n */\n\nexport function bkaratsuba_t (add, sub, mul, calloc, mov, r, wrap){\n\n\t/**\n\t * Multiply two big endian arrays using karatsuba algorithm,\n\t * i >= j, k >= 2 * i\n\t *\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} ci c left\n\t * @param {int} cj c right\n\t */\n\n\tvar karatsuba = function(a, ai, aj, b, bi, bj, c, ci, cj){\n\n\t\tvar z0, z2, t1, t2, t3, n, I, N, N_, i_, j_, i, j, k;\n\n\t\ti = aj - ai;\n\t\tj = bj - bi;\n\t\tk = cj - ci;\n\n\t\t// EMPTY CASE\n\t\tif (i <= 0 || j <= 0 || k <= 0) return;\n\n\t\t// BASE CASE i = j = 1\n\t\tif (i === 1) {\n\n\t\t\tz0 = a[ai] * b[bi];\n\t\t\tc[cj-1] = z0 % r;\n\n\t\t\tif (k > 1) {\n\t\t\t\tc[cj-2] = (z0 - c[cj-1]) / r;\n\t\t\t}\n\n\t\t}\n\n\t\t// RECURSION\n\t\telse{\n\t\t\tn  = Math.ceil(i / 2);\n\t\t\tI  = i + j;\n\t\t\tN  = 2 * n;\n\t\t\tN_ = I - N;\n\t\t\ti_ = aj - n;\n\t\t\tj_ = Math.max(bi, bj - n);\n\n\t\t\tt1 = calloc(n + 1); // + 1 to handle addition overflows\n\t\t\tt2 = calloc(n + 1); // and guarantee reducing k for the\n\t\t\tt3 = calloc(N + 1); // recursive calls\n\t\t\tz2 = calloc(N_);\n\t\t\tz0 = calloc(N);\n\n\t\t// RECURSIVE CALLS\n\t\t\tmul(a, ai, i_, b, bi, j_, z2, 0, N_);            // z2 = a1.b1\n\t\t\tmul(a, i_, aj, b, j_, bj, z0, 0, N);             // z0 = a0.b0\n\t\t\tadd(a, i_, aj, a, ai, i_, t1, 0, n + 1);         // (a0 + a1)\n\t\t\tadd(b, bi, j_, b, j_, bj, t2, 0, n + 1);         // (b1 + b0)\n\t\t\tmul(t1, 1, n + 1, t2, 1, n + 1, t3, 1, N + 1);   // (a0 + a1)(b1 + b0)\n\n\t\t// BUILD OUTPUT\n\t\t\tmov(z2, 0, N_, c, cj - I);                       // + z2 . r^{2n}\n\t\t\tmov(z0, 0, N , c, cj - N);                       // + z0\n\n\t\t\tif (t1[0]) {\n\t\t\t\t// overflow on t1, add t2 . r^{n}\n\t\t\t\tadd(t3, 0, N + 1 - n, t2, 1, n + 1, t3, 0, N + 1 - n);\n\t\t\t}\n\n\t\t\tif (t2[0]) {\n\t\t\t\t// overflow on t2, add t1 . r^{n}\n\t\t\t\tadd(t3, 0, N + 1 - n, t1, 1, n + 1, t3, 0, N + 1 - n);\n\t\t\t}\n\n\t\t\tif (t1[0] && t2[0]) {\n\t\t\t\t// overflow on t1 and t2, add 1 . r^{n+1}\n\t\t\t\tadd(t3, 0, N - n, t1, 0, 1, t3, 0, N - n);\n\t\t\t}\n\n\t\t\tadd(c, ci, cj - n, t3, 0, N + 1, c, ci, cj - n); // + (a0 + a1)(b1 + b0) . r^{n}\n\t\t\tsub(c, ci, cj - n, z2, 0, N_, c, ci, cj - n);    // - z2 . r^{n}\n\t\t\tsub(c, ci, cj - n, z0, 0, N, c, ci, cj - n);     // - z1 . r^{n}\n\t\t}\n\n\t};\n\n\tif (wrap !== undefined) karatsuba = wrap(karatsuba);\n\tif (mul === undefined) mul = karatsuba;\n\n\treturn karatsuba;\n\n}\n"
  },
  {
    "__docId__": 15,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bkaratsuba_t",
    "memberof": "src/0-legacy/arithmetic/mul/karatsuba.js",
    "longname": "src/0-legacy/arithmetic/mul/karatsuba.js~bkaratsuba_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/mul/karatsuba.js",
    "importStyle": "{bkaratsuba_t}",
    "description": "/!\\ BLOCK MULTIPLICATION RESULT MUST HOLD IN THE JAVASCRIPT NUMBER TYPE (DOUBLE i.e. 53 bits)\n\nEXPLANATION\n###########\n\nWe consider the numbers a and b, both of size N = 2n.\n\nWe divide a and b into their lower and upper parts.\n\na = a1 r^{n} + a0 (1)\nb = b1 r^{n} + b0 (2)\n\nWe express the product of a and b using their lower and upper parts.\n\na b = (a1 r^{n} + a0) (b1 r^{n} + b0) (3)\n    = a1 b1 r^{2n} + (a1 b0 + a0 b1) r^{n} + a0 b0 (4)\n\nThis gives us 4 multiplications with operands of size n.\nUsing a simple trick, we can reduce this computation to 3 multiplications.\n\nWe give the 3 terms of (4) the names z0, z1 and z2.\n\nz2 = a1 b1\nz1 = a1 b0 + a0 b1\nz0 = a0 b0\n\na b  = z2 r^{2n} + z1 r^{n} + z0\n\nWe then express z1 using z0, z2 and one additional multiplication.\n\n(a1 + a0)(b1 + b0) = a1 b1 + a0 b0 + (a1 b0 + a0 b1)\n                   = z2 + z0 + z1\n\nz1 = (a1 + a0)(b1 + b0) - z2 - z0\n\nAN ANOTHER WAY AROUND (not used here)\n\n(a1 - a0)(b1 - b0) = (a1 b1 + a0 b0) - (a1 b0 + a0 b1)\n(a0 - a1)(b1 - b0) = (a1 b0 + a0 b1) - (a1 b1 + a0 b0)\na b = (r^{2n} + r^{n})a1 b1 + r^{n}(a0 - a1)(b1 - b0) + (r^{n} + 1)a0 b0\n\nThis algorithm is a generalization of the Toom-Cook algorithm, when m = n = 2.\n\nFor further reference, see\n - http://en.wikipedia.org/wiki/Karatsuba_algorithm\n - http://en.wikipedia.org/wiki/Toom–Cook_multiplication",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "add",
        "description": "addition algorithm"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "sub",
        "description": "subtraction algorithm"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "mul",
        "description": "multiplication algorithm"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "calloc",
        "description": "array allocator"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "mov",
        "description": "copy algorithm"
      },
      {
        "nullable": null,
        "types": [
          "uint"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "base (radix)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "wrap",
        "description": "recursive multiplication algorithm"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/mul/mul.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/mul/mul.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function bmul_t (r){\n\n\t/**\n\t * Computes product of two big endian arrays.\n\t * <p>\n\t * Computes product of two big endian arrays\n\t * using long multiplication algorithm (the one teached in\n\t * european primary schools)\n\t */\n\n\tvar mul = function(a, ai, aj, b, bi, bj, c, ci, cj){\n\t\tvar ak, ck = --cj, ct, t, u, v, w, y, z;\n\n\t\twhile (bj --> bi && ck >= ci) {\n\t\t\tfor (ak = aj, w = 0; ak --> ai && ck >= ci; --ck) {\n\t\t\t\tt = b[bj] * a[ak];\n\t\t\t\tu = t % r;\n\t\t\t\tv = c[ck] + u + w;\n\n\t\t\t\ty = v % r;\n\n\t\t\t\tc[ck] = y;\n\n\t\t\t\tz = (v - y) / r;\n\n\t\t\t\tfor (ct = ck - 1; z > 0 && ct >= ci; --ct) {\n\t\t\t\t\tv = c[ct] + z;\n\t\t\t\t\ty = v % r;\n\t\t\t\t\tc[ct] = y;\n\t\t\t\t\tz = (v - y) / r;\n\t\t\t\t}\n\n\t\t\t\tw = (t - u) / r;\n\t\t\t}\n\t\t\tck = --cj;\n\t\t}\n\t};\n\n\treturn mul;\n\n}\n"
  },
  {
    "__docId__": 17,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bmul_t",
    "memberof": "src/0-legacy/arithmetic/mul/mul.js",
    "longname": "src/0-legacy/arithmetic/mul/mul.js~bmul_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/mul/mul.js",
    "importStyle": "{bmul_t}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/mul/mul53.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/mul/mul53.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "/**\n * /!\\ BLOCK MULTIPLICATION RESULT MUST HOLD IN THE JAVASCRIPT NUMBER TYPE (DOUBLE i.e. 53 bits)\n *\n * big endian 1 block multiplication\n *\n */\n\nexport function bmul53_t ( r ) {\n\n\t/**\n\t * Multiply two blocks, result is put in a 1 or 2 blocks big endian array.\n\t * aj - ai <= 1, bj - bi <= 1, cj - ci <= 2\n\t *\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} ci c left\n\t * @param {int} cj c right\n\t */\n\n\tvar mul = function(a, ai, aj, b, bi, bj, c, ci, cj){\n\n\t\tvar v;\n\n\t\t// EMPTY CASE\n\t\tif (aj <= ai || bj <= bi || cj <= ci) return;\n\n\t\tv = a[ai] * b[bi];\n\t\tc[cj-1] = v % r;\n\n\t\tif (cj > ci + 1) {\n\t\t\tc[cj-2] = (v - c[cj-1]) / r;\n\t\t}\n\n\t};\n\n\treturn mul;\n\n}\n\n\n/**\n * /!\\ BLOCK MULTIPLICATION RESULT MUST HOLD IN THE JAVASCRIPT NUMBER TYPE (DOUBLE i.e. 53 bits)\n *\n * little endian 1 block multiplication\n *\n */\n\nexport function lmul53_t (r){\n\n\t/**\n\t * Multiply two blocks, result is put in a 1 or 2 blocks little endian array.\n\t * aj - ai <= 1, bj - bi <= 1, cj - ci <= 2\n\t *\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} ci c left\n\t * @param {int} cj c right\n\t */\n\n\tvar mul = function(a, ai, aj, b, bi, bj, c, ci, cj){\n\n\t\tvar v;\n\n\t\t// EMPTY CASE\n\t\tif (aj <= ai || bj <= bi || cj <= ci) return;\n\n\t\tv = a[ai] * b[bi];\n\t\tc[ci] = v % r;\n\n\t\tif (cj > ci + 1) {\n\t\t\tc[ci+1] = (v - c[ci]) / r;\n\t\t}\n\n\t};\n\n\treturn mul;\n\n}\n"
  },
  {
    "__docId__": 19,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bmul53_t",
    "memberof": "src/0-legacy/arithmetic/mul/mul53.js",
    "longname": "src/0-legacy/arithmetic/mul/mul53.js~bmul53_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/mul/mul53.js",
    "importStyle": "{bmul53_t}",
    "description": "/!\\ BLOCK MULTIPLICATION RESULT MUST HOLD IN THE JAVASCRIPT NUMBER TYPE (DOUBLE i.e. 53 bits)\n\nbig endian 1 block multiplication",
    "lineNumber": 8,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "lmul53_t",
    "memberof": "src/0-legacy/arithmetic/mul/mul53.js",
    "longname": "src/0-legacy/arithmetic/mul/mul53.js~lmul53_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/mul/mul53.js",
    "importStyle": "{lmul53_t}",
    "description": "/!\\ BLOCK MULTIPLICATION RESULT MUST HOLD IN THE JAVASCRIPT NUMBER TYPE (DOUBLE i.e. 53 bits)\n\nlittle endian 1 block multiplication",
    "lineNumber": 54,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/mul/toomcook.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/mul/toomcook.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "\n// http://en.wikipedia.org/wiki/Toom–Cook_multiplication\n"
  },
  {
    "__docId__": 22,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/sub/index.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/sub/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './sub' ;\n"
  },
  {
    "__docId__": 23,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/arithmetic/sub/sub.js",
    "memberof": null,
    "longname": "src/0-legacy/arithmetic/sub/sub.js",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "content": "\n/**\n * @param {int} r base (radix)\n */\n\n\nexport const bsub_t = function(r){\n\n\t/**\n\t * Subtracts two big endian arrays, k >= i >= j\n\t * wraps\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} ci c left\n\t * @param {int} cj c right\n\t */\n\n\treturn function(a, ai, aj, b, bi, bj, c, ci, cj){\n\t\tvar T, C = 0;\n\n\t\twhile(--bj >= bi){\n\t\t\t--aj; --cj;\n\t\t\tT = C;\n\t\t\tC = a[aj] < b[bj] + T;\n\t\t\tc[cj] = a[aj] - b[bj] + (C*r - T);\n\t\t}\n\n\t\twhile(--aj >= ai){\n\t\t\t--cj;\n\t\t\tT = C;\n\t\t\tC = a[aj] < T;\n\t\t\tc[cj] = a[aj] + (C*r - T);\n\t\t}\n\n\t\tif(C){\n\t\t\twhile(--cj >= ci){\n\t\t\t\tc[cj] = r - 1;\n\t\t\t}\n\t\t}\n\n\t};\n};\n/**\n * @param {int} r base (radix)\n */\n\n\nexport const lsub_t = function(r){\n\n\t/**\n\t * Subtracts two little endian arrays, k >= i >= j\n\t * wraps\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t * @param {array} c result, must be 0 initialized\n\t * @param {int} ci c left\n\t * @param {int} cj c right\n\t */\n\n\treturn function(a, ai, aj, b, bi, bj, c, ci, cj){\n\t\tvar T, C = 0;\n\n\t\twhile(bi < bj){\n\t\t\tT = C;\n\t\t\tC = a[ai] < b[bi] + T;\n\t\t\tc[ci] = a[ai] - b[bi] + (C*r - T);\n\t\t\t++ai; ++bi; ++ci;\n\t\t}\n\n\t\twhile(ai < aj){\n\t\t\tT = C;\n\t\t\tC = a[ai] < T;\n\t\t\tc[ci] = a[ai] + (C*r - T);\n\t\t\t++ai; ++ci;\n\t\t}\n\n\t\tif(C){\n\t\t\twhile(ci < cj){\n\t\t\t\tc[ci] = r - 1;\n\t\t\t\t++ci;\n\t\t\t}\n\t\t}\n\n\t};\n};\n"
  },
  {
    "__docId__": 24,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bsub_t",
    "memberof": "src/0-legacy/arithmetic/sub/sub.js",
    "longname": "src/0-legacy/arithmetic/sub/sub.js~bsub_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/sub/sub.js",
    "importStyle": "{bsub_t}",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "base (radix)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "lsub_t",
    "memberof": "src/0-legacy/arithmetic/sub/sub.js",
    "longname": "src/0-legacy/arithmetic/sub/sub.js~lsub_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/arithmetic/sub/sub.js",
    "importStyle": "{lsub_t}",
    "description": "",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "base (radix)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/and/and.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/and/and.js",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "content": "\n/**\n *\n * BINARY and APPLIED ON a AND b\n *\n * Meaningful only when r is a power of 2.\n *\n * |a| = |b| = |c| > 0\n *\n *\n */\n\nexport const and = function (a, a0, b, b0, c, c0, c1) {\n\n\twhile (c0 < c1) c[c0++] = a[a0++] & b[b0++];\n\n};\n\n\n/**\n * BIG ENDIAN BINARY and APPLIED ON a AND b\n *\n * Meaningful only when r is a power of 2.\n *\n * |a| >= |b| > 0\n *\n * treats b as if it was represented with the same number of blocks as a\n */\n\nexport const band_t = function(r){\n\n\tvar _r = r / 2;\n\n\treturn function (a, a0, a1, b, b0, b1, c, c0, c1) {\n\n\t\tvar at = a1 - b1 + b0;\n\t\tvar ct = c0 + at - a0;\n\n\t\tif (b[b0] < _r) while (c0 < ct) c[c0++] = 0;\n\t\telse            while (c0 < ct) c[c0++] = a[a0++];\n\n\t\twhile (c0 < c1) c[c0++] = a[at++] & b[b0++];\n\n\t};\n\n};\n\n\n\n\n/**\n * LITTLE ENDIAN BINARY and APPLIED ON a AND b\n *\n * Meaningful only when r is a power of 2.\n *\n * |a| >= |b| > 0\n *\n * treats b as if it was represented with the same number of blocks as a\n */\n\nexport const land_t = function(r){\n\n\tvar _r = r / 2;\n\n\treturn function (a, a0, a1, b, b0, b1, c, c0, c1) {\n\n\t\tvar ct = c0 + b1 - b0;\n\n\t\twhile (c0 < ct) c[c0++] = a[a0++] & b[b0++];\n\n\t\tif (b[b0 - 1] < _r) while (c0 < c1) c[c0++] = 0;\n\t\telse                while (c0 < c1) c[c0++] = a[a0++];\n\n\n\t};\n\n};\n"
  },
  {
    "__docId__": 27,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "and",
    "memberof": "src/0-legacy/binary/and/and.js",
    "longname": "src/0-legacy/binary/and/and.js~and",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/binary/and/and.js",
    "importStyle": "{and}",
    "description": "\nBINARY and APPLIED ON a AND b\n\nMeaningful only when r is a power of 2.\n\n|a| = |b| = |c| > 0",
    "lineNumber": 13,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "a0",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "b0",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "c0",
        "types": [
          "*"
        ]
      },
      {
        "name": "c1",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "band_t",
    "memberof": "src/0-legacy/binary/and/and.js",
    "longname": "src/0-legacy/binary/and/and.js~band_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/binary/and/and.js",
    "importStyle": "{band_t}",
    "description": "BIG ENDIAN BINARY and APPLIED ON a AND b\n\nMeaningful only when r is a power of 2.\n\n|a| >= |b| > 0\n\ntreats b as if it was represented with the same number of blocks as a",
    "lineNumber": 30,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "land_t",
    "memberof": "src/0-legacy/binary/and/and.js",
    "longname": "src/0-legacy/binary/and/and.js~land_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/binary/and/and.js",
    "importStyle": "{land_t}",
    "description": "LITTLE ENDIAN BINARY and APPLIED ON a AND b\n\nMeaningful only when r is a power of 2.\n\n|a| >= |b| > 0\n\ntreats b as if it was represented with the same number of blocks as a",
    "lineNumber": 61,
    "params": [
      {
        "name": "r",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/and/index.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/and/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './and' ;\n"
  },
  {
    "__docId__": 31,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/index.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './and' ;\nexport * from './not' ;\nexport * from './or' ;\nexport * from './xor' ;\n"
  },
  {
    "__docId__": 32,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/not/index.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/not/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './not' ;\n"
  },
  {
    "__docId__": 33,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/not/not.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/not/not.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * BINARY not APPLIED ON a\n */"
  },
  {
    "__docId__": 34,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/or/index.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/or/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './or' ;\n"
  },
  {
    "__docId__": 35,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/or/or.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/or/or.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * BINARY or APPLIED ON a AND b\n */"
  },
  {
    "__docId__": 36,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/xor/index.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/xor/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './xor' ;\n"
  },
  {
    "__docId__": 37,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/binary/xor/xor.js",
    "memberof": null,
    "longname": "src/0-legacy/binary/xor/xor.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * BINARY xor APPLIED ON a AND b\n */"
  },
  {
    "__docId__": 38,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/cmp.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/cmp.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport const bcmp_t = function(){\n\n\n\t/**\n\t * Compares two big endian arrays, |a| >= |b|\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t *\n\t * @return {int} 1 if a > b; 0 if a = b; -1 otherwise.\n\t */\n\n\treturn function(a, ai, aj, b, bi, bj){\n\n\t\tvar tmp = aj - bj + bi;\n\n\t\tfor (; ai < tmp; ++ai)\n\t\t\tif (a[ai] > 0) return 1;\n\n\n\t\t// same size aj - ai === bj - bi\n\t\tfor (; ai < aj; ++ai, ++bi) {\n\t\t\tif (a[ai] > b[bi]) return  1;\n\t\t\tif (a[ai] < b[bi]) return -1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n};\n\nexport const lcmp_t = function(){\n\n\t/**\n\t * Compares two little endian arrays, |a| >= |b|\n\t *\n\t * @param {array} a first operand\n\t * @param {int} ai a left\n\t * @param {int} aj a right\n\t * @param {array} b second operand\n\t * @param {int} bi b left\n\t * @param {int} bj b right\n\t *\n\t * @return {int} 1 if a > b; 0 if a = b; -1 otherwise.\n\t */\n\n\treturn function(a, ai, aj, b, bi, bj){\n\n\t\tvar tmp = ai + bj - bi;\n\n\t\t--aj; --bj;\n\n\t\tfor (; aj >= tmp; --aj)\n\t\t\tif (a[aj] > 0) return 1;\n\n\n\t\t// same size aj - ai === bj - bi\n\t\tfor (; aj >= ai; --aj, --bj) {\n\t\t\tif (a[aj] > b[bj]) return  1;\n\t\t\tif (a[aj] < b[bj]) return -1;\n\t\t}\n\n\t\treturn 0;\n\t};\n};\n"
  },
  {
    "__docId__": 39,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bcmp_t",
    "memberof": "src/0-legacy/compare/cmp.js",
    "longname": "src/0-legacy/compare/cmp.js~bcmp_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/cmp.js",
    "importStyle": "{bcmp_t}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "lcmp_t",
    "memberof": "src/0-legacy/compare/cmp.js",
    "longname": "src/0-legacy/compare/cmp.js~lcmp_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/cmp.js",
    "importStyle": "{lcmp_t}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/eq.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/eq.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "\n\n/**\n * Wrapper for a comparison operator that returns true iff\n * _a_ is equal to _b_.\n */\n\nexport const eq_t = function(cmp){\n\treturn function (a, ai, aj, b, bi, bj) {\n\t\treturn cmp(a, ai, aj, b, bi, bj) === 0;\n\t};\n};\n"
  },
  {
    "__docId__": 42,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "eq_t",
    "memberof": "src/0-legacy/compare/eq.js",
    "longname": "src/0-legacy/compare/eq.js~eq_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/eq.js",
    "importStyle": "{eq_t}",
    "description": "Wrapper for a comparison operator that returns true iff\n_a_ is equal to _b_.",
    "lineNumber": 8,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/ge.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/ge.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "\n\n/**\n * Wrapper for a comparison operator that returns true iff\n * _a_ is greater or equal to _b_.\n */\n\nexport const ge_t = function(cmp){\n\treturn function (a, ai, aj, b, bi, bj) {\n\t\treturn cmp(a, ai, aj, b, bi, bj) >= 0;\n\t};\n};\n"
  },
  {
    "__docId__": 44,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ge_t",
    "memberof": "src/0-legacy/compare/ge.js",
    "longname": "src/0-legacy/compare/ge.js~ge_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/ge.js",
    "importStyle": "{ge_t}",
    "description": "Wrapper for a comparison operator that returns true iff\n_a_ is greater or equal to _b_.",
    "lineNumber": 8,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/gt.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/gt.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "\n\n/**\n * Wrapper for a comparison operator that returns true iff\n * _a_ is greater than _b_.\n */\n\nexport const gt_t = function(cmp){\n\treturn function (a, ai, aj, b, bi, bj) {\n\t\treturn cmp(a, ai, aj, b, bi, bj) > 0;\n\t};\n};\n"
  },
  {
    "__docId__": 46,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "gt_t",
    "memberof": "src/0-legacy/compare/gt.js",
    "longname": "src/0-legacy/compare/gt.js~gt_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/gt.js",
    "importStyle": "{gt_t}",
    "description": "Wrapper for a comparison operator that returns true iff\n_a_ is greater than _b_.",
    "lineNumber": 8,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/index.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './cmp' ;\nexport * from './eq' ;\nexport * from './ge' ;\nexport * from './gt' ;\nexport * from './le' ;\nexport * from './lt' ;\nexport * from './ne' ;\n"
  },
  {
    "__docId__": 48,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/le.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/le.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "\n\n/**\n * Wrapper for a comparison operator that returns true iff\n * _a_ is less or equal to _b_.\n */\n\nexport const le_t = function(cmp){\n\treturn function (a, ai, aj, b, bi, bj) {\n\t\treturn cmp(a, ai, aj, b, bi, bj) <= 0;\n\t};\n};\n"
  },
  {
    "__docId__": 49,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "le_t",
    "memberof": "src/0-legacy/compare/le.js",
    "longname": "src/0-legacy/compare/le.js~le_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/le.js",
    "importStyle": "{le_t}",
    "description": "Wrapper for a comparison operator that returns true iff\n_a_ is less or equal to _b_.",
    "lineNumber": 8,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/lt.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/lt.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "\n\n/**\n * Wrapper for a comparison operator that returns true iff\n * _a_ is less than _b_.\n */\n\nexport const lt_t = function(cmp){\n\treturn function (a, ai, aj, b, bi, bj) {\n\t\treturn cmp(a, ai, aj, b, bi, bj) < 0;\n\t};\n};\n"
  },
  {
    "__docId__": 51,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "lt_t",
    "memberof": "src/0-legacy/compare/lt.js",
    "longname": "src/0-legacy/compare/lt.js~lt_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/lt.js",
    "importStyle": "{lt_t}",
    "description": "Wrapper for a comparison operator that returns true iff\n_a_ is less than _b_.",
    "lineNumber": 8,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/compare/ne.js",
    "memberof": null,
    "longname": "src/0-legacy/compare/ne.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "\n\n/**\n * Wrapper for a comparison operator that returns true iff\n * _a_ is not equal to _b_.\n */\n\nexport const ne_t = function(cmp){\n\treturn function (a, ai, aj, b, bi, bj) {\n\t\treturn cmp(a, ai, aj, b, bi, bj) !== 0;\n\t};\n};\n"
  },
  {
    "__docId__": 53,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ne_t",
    "memberof": "src/0-legacy/compare/ne.js",
    "longname": "src/0-legacy/compare/ne.js~ne_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/compare/ne.js",
    "importStyle": "{ne_t}",
    "description": "Wrapper for a comparison operator that returns true iff\n_a_ is not equal to _b_.",
    "lineNumber": 8,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/index.js",
    "memberof": null,
    "longname": "src/0-legacy/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './abs' ;\nexport * from './arithmetic' ;\nexport * from './binary' ;\nexport * from './compare' ;\nexport * from './others' ;\nexport * from './parse' ;\nexport * from './stringify' ;\n"
  },
  {
    "__docId__": 55,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/gcd/gcd.js",
    "memberof": null,
    "longname": "src/0-legacy/others/gcd/gcd.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * COMPUTE THE GREATEST COMMON DIVISOR OF a AND b\n */"
  },
  {
    "__docId__": 56,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/gcd/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/gcd/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './gcd' ;\n"
  },
  {
    "__docId__": 57,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './gcd' ;\nexport * from './lcm' ;\nexport * from './log' ;\nexport * from './mod' ;\nexport * from './mpow' ;\nexport * from './neg' ;\nexport * from './pow' ;\nexport * from './sha' ;\nexport * from './shl' ;\nexport * from './wrap' ;\n"
  },
  {
    "__docId__": 58,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/lcm/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/lcm/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './lcm' ;\n"
  },
  {
    "__docId__": 59,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/lcm/lcm.js",
    "memberof": null,
    "longname": "src/0-legacy/others/lcm/lcm.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * COMPUTE THE LEAST COMMON MULTIPLE OF a AND b\n */"
  },
  {
    "__docId__": 60,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/log/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/log/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './log' ;\n"
  },
  {
    "__docId__": 61,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/log/log.js",
    "memberof": null,
    "longname": "src/0-legacy/others/log/log.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "\n/**\n * FOR A NUMBER n COMPUTE THE GREATEST k SUCH THAT 2^k < n\n */"
  },
  {
    "__docId__": 62,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/mod/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/mod/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './mod' ;\nexport * from './montgomery' ;\n"
  },
  {
    "__docId__": 63,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/mod/mod.js",
    "memberof": null,
    "longname": "src/0-legacy/others/mod/mod.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "\n/**\n * COMPUTE MODULUS (a % b)\n */"
  },
  {
    "__docId__": 64,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/mod/montgomery.js",
    "memberof": null,
    "longname": "src/0-legacy/others/mod/montgomery.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "\n/**\n * COMPUTE MODULUS USING MONTGOMERY REDUCTION : http://en.wikipedia.org/wiki/Montgomery_reduction\n */"
  },
  {
    "__docId__": 65,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/mpow/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/mpow/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './mpow' ;\n"
  },
  {
    "__docId__": 66,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/mpow/mpow.js",
    "memberof": null,
    "longname": "src/0-legacy/others/mpow/mpow.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * MODULAR EXPONENTIATION : http://en.wikipedia.org/wiki/Modular_exponentiation\n */"
  },
  {
    "__docId__": 67,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/neg/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/neg/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './neg' ;\n"
  },
  {
    "__docId__": 68,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/neg/neg.js",
    "memberof": null,
    "longname": "src/0-legacy/others/neg/neg.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * COMPUTE THE NEGATIVE VALUE OF NUMBER n\n */"
  },
  {
    "__docId__": 69,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/pow/ebs.js",
    "memberof": null,
    "longname": "src/0-legacy/others/pow/ebs.js",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "content": "/**\n * Computes pow(a, b) using exponentiation by squaring.\n *\n * *could add an additional base case for b = 1*\n *\n */\n\nexport const _ebs__ = function (alloc, iszero, setone, iseven, div2, minus1) {\n\n\tvar ebs = function (a, ai, aj, b, bi, bj, c, ci, cj) {\n\n\t\tvar t, u, m, n;\n\n\t\tif ( iszero(b, bi, bj) ) {\n\t\t\tsetone(c, ci, cj);\n\t\t}\n\t\telse if ( iseven(b, bi, bj) ) {\n\t\t\tm = bj - bi;\n\t\t\tt = alloc(m);\n\t\t\tt = div2(b, bi, bj, t, 0, m);\n\n\t\t\tn = cj - ci;\n\t\t\tu = alloc(n);\n\n\t\t\tebs(a, ai, aj, t, 0, m, u, 0, n);\n\n\t\t\tmul(u, 0, n, u, 0, n, c, ci, cj);\n\t\t}\n\t\telse{\n\t\t\tm = bj - bi;\n\t\t\tt = alloc(m);\n\t\t\tt = minus1(b, bi, bj, t, 0, m);\n\n\t\t\tn = cj - ci;\n\t\t\tu = alloc(n);\n\n\t\t\tebs(a, ai, aj, t, 0, m, u, 0, n);\n\n\t\t\tmul(a, ai, aj, u, 0, n, c, ci, cj);\n\t\t}\n\t};\n};\n"
  },
  {
    "__docId__": 70,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_ebs__",
    "memberof": "src/0-legacy/others/pow/ebs.js",
    "longname": "src/0-legacy/others/pow/ebs.js~_ebs__",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/others/pow/ebs.js",
    "importStyle": "{_ebs__}",
    "description": "Computes pow(a, b) using exponentiation by squaring.\n\n*could add an additional base case for b = 1*",
    "lineNumber": 8,
    "params": [
      {
        "name": "alloc",
        "types": [
          "*"
        ]
      },
      {
        "name": "iszero",
        "types": [
          "*"
        ]
      },
      {
        "name": "setone",
        "types": [
          "*"
        ]
      },
      {
        "name": "iseven",
        "types": [
          "*"
        ]
      },
      {
        "name": "div2",
        "types": [
          "*"
        ]
      },
      {
        "name": "minus1",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/pow/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/pow/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './ebs' ;\nexport * from './pow' ;\n"
  },
  {
    "__docId__": 72,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/pow/pow.js",
    "memberof": null,
    "longname": "src/0-legacy/others/pow/pow.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/**\n * Computes pow(a, b) using naive exponentiation.\n *\n */\n\nexport const __pow__ = function (alloc, isnotzero, setone, iseven, div2, minus1) {\n\n\tvar pow = function (a, ai, aj, b, bi, bj, c, ci, cj) {\n\n\t\tvar t, m;\n\n\t\tsetone(c, ci, cj);\n\n\t\twhile (isnotzero(b, bi, bj)) {\n\n\t\t\tmul(c, ci, cj, a, ai, aj, c, ci, cj);\n\n\t\t\tminus1(b, bi, bj, b, bi, bj);\n\t\t}\n\n\t};\n}\n"
  },
  {
    "__docId__": 73,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "__pow__",
    "memberof": "src/0-legacy/others/pow/pow.js",
    "longname": "src/0-legacy/others/pow/pow.js~__pow__",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/others/pow/pow.js",
    "importStyle": "{__pow__}",
    "description": "Computes pow(a, b) using naive exponentiation.",
    "lineNumber": 6,
    "params": [
      {
        "name": "alloc",
        "types": [
          "*"
        ]
      },
      {
        "name": "isnotzero",
        "types": [
          "*"
        ]
      },
      {
        "name": "setone",
        "types": [
          "*"
        ]
      },
      {
        "name": "iseven",
        "types": [
          "*"
        ]
      },
      {
        "name": "div2",
        "types": [
          "*"
        ]
      },
      {
        "name": "minus1",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/sha/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/sha/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './sha' ;\n"
  },
  {
    "__docId__": 75,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/sha/sha.js",
    "memberof": null,
    "longname": "src/0-legacy/others/sha/sha.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * ARITHMETIC SHIFT\n */"
  },
  {
    "__docId__": 76,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/shl/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/shl/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './shl' ;\n"
  },
  {
    "__docId__": 77,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/shl/shl.js",
    "memberof": null,
    "longname": "src/0-legacy/others/shl/shl.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "/**\n * LOGICAL SHIFT\n */"
  },
  {
    "__docId__": 78,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/wrap/index.js",
    "memberof": null,
    "longname": "src/0-legacy/others/wrap/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './wrapbin' ;\nexport * from './wrapcmp' ;\nexport * from './wrapmov' ;\n"
  },
  {
    "__docId__": 79,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/wrap/wrapbin.js",
    "memberof": null,
    "longname": "src/0-legacy/others/wrap/wrapbin.js",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "content": "/**\n * Wrapper for binary operator.\n * Ensures\n *\n *     i >= j\n *     i0, j0, k0 >= 0\n *\n */\n\nexport function wrapbin (fn){\n\n\treturn function(a, i0, i1, b, j0, j1, c, k0, k1){\n\n\t\tvar i, j, k;\n\n\t\tk0 = Math.max(0, k0);\n\t\tk = k1 - k0;\n\n\t\ti0 = Math.max(0, i0, i1 - k);\n\t\tj0 = Math.max(0, j0, j1 - k);\n\t\ti = i1 - i0;\n\t\tj = j1 - j0;\n\n\t\tif(i < j)\n\t\treturn fn(b, j0, j1, a, i0, i1, c, k0, k1);\n\n\t\telse\n\t\treturn fn(a, i0, i1, b, j0, j1, c, k0, k1);\n\t};\n}\n"
  },
  {
    "__docId__": 80,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "wrapbin",
    "memberof": "src/0-legacy/others/wrap/wrapbin.js",
    "longname": "src/0-legacy/others/wrap/wrapbin.js~wrapbin",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/others/wrap/wrapbin.js",
    "importStyle": "{wrapbin}",
    "description": "Wrapper for binary operator.\nEnsures\n\n    i >= j\n    i0, j0, k0 >= 0",
    "lineNumber": 10,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/wrap/wrapcmp.js",
    "memberof": null,
    "longname": "src/0-legacy/others/wrap/wrapcmp.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "\n\n\nexport function wrapcmp ( cmp ) {\n\n\treturn function(a, ai, aj, b, bi, bj){\n\n\t\tif (aj - ai + bi - bj < 0) {\n\t\t\treturn - cmp(b, bi, bj, a, ai, aj);\n\t\t}\n\t\telse {\n\t\t\treturn cmp(a, ai, aj, b, bi, bj);\n\t\t}\n\n\t};\n\n}\n"
  },
  {
    "__docId__": 82,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "wrapcmp",
    "memberof": "src/0-legacy/others/wrap/wrapcmp.js",
    "longname": "src/0-legacy/others/wrap/wrapcmp.js~wrapcmp",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/others/wrap/wrapcmp.js",
    "importStyle": "{wrapcmp}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "cmp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/others/wrap/wrapmov.js",
    "memberof": null,
    "longname": "src/0-legacy/others/wrap/wrapmov.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "\n\nexport function wrapmov ( fn ) {\n\treturn function(a, i, j, b, k){\n\n\t\tif(i < 0){\n\t\t\tk -= i;\n\t\t\ti = 0;\n\t\t}\n\t\tif(k < 0){\n\t\t\ti -= k;\n\t\t\tk = 0;\n\t\t}\n\t\treturn fn(a, i, j, b, k);\n\n\t};\n}\n"
  },
  {
    "__docId__": 84,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "wrapmov",
    "memberof": "src/0-legacy/others/wrap/wrapmov.js",
    "longname": "src/0-legacy/others/wrap/wrapmov.js~wrapmov",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/others/wrap/wrapmov.js",
    "importStyle": "{wrapmov}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/parse/index.js",
    "memberof": null,
    "longname": "src/0-legacy/parse/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './parse' ;\n"
  },
  {
    "__docId__": 86,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/parse/parse.js",
    "memberof": null,
    "longname": "src/0-legacy/parse/parse.js",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "content": "\n/**\n * Function template for number parsing.\n * Endianess provided by the iterator function\n * iterator function must be reverse ordered\n *\n * @param {int} t to radix\n * @param {int} f from radix\n * @param {function} iter iterator function\n */\n\n\nexport function parse_t (t, f, iter){\n\n\tif(t >= f){\n\n\t\tif(f > 36) throw 'f > 36 not implemented';\n\n\t\tvar z = 0, log = t;\n\t\twhile(log >= f){\n\t\t\tif (log % f) break;\n\t\t\tlog /= f;\n\t\t\t++z;\n\t\t}\n\n\t\tif (log !== 1) throw 'log(f) does not divide log(t) not implemented';\n\n\t\t// immediate log(t) divides log(f)\n\t\treturn function(s, si, sj, a, ai, aj){\n\t\t\tvar len = sj - si, k = sj - z, n = Math.ceil(len / z);\n\t\t\tvar block = function(i){\n\t\t\t\ta[i] = parseInt(s.slice(Math.max(0, k), k + z), f);\n\t\t\t\tk -= z;\n\t\t\t};\n\n\t\t\titer(aj - n, aj, block);\n\n\t\t};\n\n\t}\n\telse throw 'f > t not implemented';\n\n\n}\n"
  },
  {
    "__docId__": 87,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parse_t",
    "memberof": "src/0-legacy/parse/parse.js",
    "longname": "src/0-legacy/parse/parse.js~parse_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/parse/parse.js",
    "importStyle": "{parse_t}",
    "description": "Function template for number parsing.\nEndianess provided by the iterator function\niterator function must be reverse ordered",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "to radix"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "from radix"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "iter",
        "description": "iterator function"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/stringify/index.js",
    "memberof": null,
    "longname": "src/0-legacy/stringify/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './stringify' ;\n"
  },
  {
    "__docId__": 89,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/0-legacy/stringify/stringify.js",
    "memberof": null,
    "longname": "src/0-legacy/stringify/stringify.js",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "content": "\n/**\n * Function template for number stringification.\n * Endianess provided by the iterator function\n *\n * @param {int} f from radix\n * @param {int} t to radix\n * @param {function} iter iterator function\n * @param {function} zfill_t zero fill string function\n */\n\n\nexport function stringify_t (f, t, iter, zfill_t){\n\n\tif(t <= f){\n\n\t\tif(t > 36) throw 't > 36 not implemented';\n\n\t\tvar z = 0;\n\t\twhile(f >= t){\n\t\t\tif(f % t) break;\n\t\t\tf /= t;\n\t\t\t++z;\n\t\t}\n\n\t\tif(f !== 1) throw 'log(t) does not divide log(f) not implemented';\n\n\t\tvar zfill = zfill_t(z);\n\n\t\treturn function(a, i0, i1){\n\t\t\tvar s = [];\n\t\t\titer(i0, i1, function(i){\n\t\t\t\ts.push(zfill(Number(+a[i]).toString(t)));\n\t\t\t});\n\t\t\treturn s.join('');\n\t\t};\n\n\t}\n\telse throw 't > f not implemented';\n\n}\n"
  },
  {
    "__docId__": 90,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "stringify_t",
    "memberof": "src/0-legacy/stringify/stringify.js",
    "longname": "src/0-legacy/stringify/stringify.js~stringify_t",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/0-legacy/stringify/stringify.js",
    "importStyle": "{stringify_t}",
    "description": "Function template for number stringification.\nEndianess provided by the iterator function",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "from radix"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "to radix"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "iter",
        "description": "iterator function"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "zfill_t",
        "description": "zero fill string function"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/arithmetic/div/_div.js",
    "memberof": null,
    "longname": "src/1-new/arithmetic/div/_div.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _sub } from '../sub' ;\nimport { _lt } from '../../compare' ;\n\n\n/**\n * Computes quotient and remainder of two big endian arrays.\n * <p>\n * Computes quotient and remainder of two big endian arrays\n * using long division algorithm (the one teached in\n * european primary schools).\n *\n * /!\\ This algorithm modifies its first operand.\n *\n * HYP : q is at least as large as r\n *       b is not zero\n *\n * @param {int} x the radix\n * @param {array} r dividend and remainder\n * @param {int} ri r left\n * @param {int} rj r right\n * @param {array} b divisor\n * @param {int} bi b left\n * @param {int} bj b right\n * @param {array} q quotient, must be 0 initialized\n * @param {int} qi q left\n */\n\n// /!\\ There are implicit hypotheses\n//     made on the size of the operands.\n//     Should clarify.\n\nexport function _div ( x , r , ri , rj , b , bi , bj , q , qi ) {\n\n\tvar k, t = ri + 1;\n\n\tdo {\n\n\t\t// trim leading zeros\n\t\t//     - maybe could try to put this procedure inside the _sub loop\n\t\t//     - or assume that the number is trimed at the begining\n\t\t//       and put this statement at the end of the main loop\n\t\twhile (ri < rj && r[ri] === 0) ++ri;\n\n\t\t// search for a remainder block interval\n\t\t// greater than the divisor\n\t\t//     - maybe could try binary search on the _lt function\n\t\t//     for another implementation\n\t\tk = ri + 1;\n\t\twhile (k <= rj && _lt(r, ri, k, b, bi, bj)) ++k;\n\n\t\t// remainder smaller than divisor --> end\n\t\tif (k > rj) break;\n\n\t\t// divide current block interval by quotient\n\t\tdo{\n\n\t\t\t// increment quotient block corresponding\n\t\t\t// to current ls block of remainder interval\n\t\t\t++q[qi + k - t];\n\n\t\t\t// subtract divisor from current remainder\n\t\t\t// block interval\n\t\t\t_sub(x, r, ri, k, b, bi, bj, r, ri, k);\n\n\t\t} while(!_lt(r, ri, k, b, bi, bj));\n\n\n\t} while(true);\n\n}\n"
  },
  {
    "__docId__": 92,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_div",
    "memberof": "src/1-new/arithmetic/div/_div.js",
    "longname": "src/1-new/arithmetic/div/_div.js~_div",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/arithmetic/div/_div.js",
    "importStyle": "{_div}",
    "description": "Computes quotient and remainder of two big endian arrays.\n<p>\nComputes quotient and remainder of two big endian arrays\nusing long division algorithm (the one teached in\neuropean primary schools).\n\n/!\\ This algorithm modifies its first operand.\n\nHYP : q is at least as large as r\n      b is not zero",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "the radix"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "dividend and remainder"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": "r left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": "r right"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "divisor"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "b left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "b right"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "q",
        "description": "quotient, must be 0 initialized"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "qi",
        "description": "q left"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/arithmetic/div/index.js",
    "memberof": null,
    "longname": "src/1-new/arithmetic/div/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './_div' ;\n"
  },
  {
    "__docId__": 94,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/arithmetic/index.js",
    "memberof": null,
    "longname": "src/1-new/arithmetic/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './div' ;\nexport * from './sub' ;\n"
  },
  {
    "__docId__": 95,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/arithmetic/sub/_sub.js",
    "memberof": null,
    "longname": "src/1-new/arithmetic/sub/_sub.js",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "content": "\n/**\n * Subtracts two big endian arrays, k >= i >= j\n * wraps\n *\n * @param {int} r base (radix)\n * @param {array} a first operand\n * @param {int} ai a left\n * @param {int} aj a right\n * @param {array} b second operand\n * @param {int} bi b left\n * @param {int} bj b right\n * @param {array} c result, must be 0 initialized\n * @param {int} ci c left\n * @param {int} cj c right\n */\n\nexport const _sub = function ( r , a, ai, aj, b, bi, bj, c, ci, cj){\n\tvar T, C = 0;\n\n\twhile(--bj >= bi){\n\t\t--aj; --cj;\n\t\tT = C;\n\t\tC = a[aj] < b[bj] + T;\n\t\tc[cj] = a[aj] - b[bj] + (C*r - T);\n\t}\n\n\twhile(--aj >= ai){\n\t\t--cj;\n\t\tT = C;\n\t\tC = a[aj] < T;\n\t\tc[cj] = a[aj] + (C*r - T);\n\t}\n\n\tif(C){\n\t\twhile(--cj >= ci){\n\t\t\tc[cj] = r - 1;\n\t\t}\n\t}\n\n};\n"
  },
  {
    "__docId__": 96,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_sub",
    "memberof": "src/1-new/arithmetic/sub/_sub.js",
    "longname": "src/1-new/arithmetic/sub/_sub.js~_sub",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/arithmetic/sub/_sub.js",
    "importStyle": "{_sub}",
    "description": "Subtracts two big endian arrays, k >= i >= j\nwraps",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "base (radix)"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "first operand"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "a left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "a right"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "second operand"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "b left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "b right"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "c",
        "description": "result, must be 0 initialized"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "ci",
        "description": "c left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "cj",
        "description": "c right"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/arithmetic/sub/index.js",
    "memberof": null,
    "longname": "src/1-new/arithmetic/sub/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './_sub' ;\n"
  },
  {
    "__docId__": 98,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_CMP.js",
    "memberof": null,
    "longname": "src/1-new/compare/_CMP.js",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "content": "\n/**\n * Compares two big endian arrays, |a| >= |b|\n *\n * @param {array} a first operand\n * @param {int} ai a left\n * @param {int} aj a right\n * @param {array} b second operand\n * @param {int} bi b left\n * @param {int} bj b right\n *\n * @return {int} result 1 if a > b; 0 if a = b; -1 otherwise.\n */\n\nexport const _CMP = function(a, ai, aj, b, bi, bj){\n\n\tvar tmp = aj - bj + bi;\n\n\tfor (; ai < tmp; ++ai)\n\t\tif (a[ai] > 0) return 1;\n\n\t// same size aj - ai === bj - bi\n\tfor (; ai < aj; ++ai, ++bi) {\n\t\tif (a[ai] > b[bi]) return  1;\n\t\tif (a[ai] < b[bi]) return -1;\n\t}\n\n\treturn 0;\n};\n"
  },
  {
    "__docId__": 99,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_CMP",
    "memberof": "src/1-new/compare/_CMP.js",
    "longname": "src/1-new/compare/_CMP.js~_CMP",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_CMP.js",
    "importStyle": "{_CMP}",
    "description": "Compares two big endian arrays, |a| >= |b|",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "first operand"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "a left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "a right"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "second operand"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "b left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "b right"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "result 1 if a > b; 0 if a = b; -1 otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_cmp.js",
    "memberof": null,
    "longname": "src/1-new/compare/_cmp.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _CMP } from '.' ;\n\nexport function _cmp ( a , ai , aj , b , bi , bj ) {\n\n\tif ( aj - ai < bj - bi )\n\t\treturn -_CMP( b , bi , bj , a , ai , aj ) ;\n\telse\n\t\treturn  _CMP( a , ai , aj , b , bi , bj ) ;\n\n}\n"
  },
  {
    "__docId__": 101,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_cmp",
    "memberof": "src/1-new/compare/_cmp.js",
    "longname": "src/1-new/compare/_cmp.js~_cmp",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_cmp.js",
    "importStyle": "{_cmp}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "bi",
        "types": [
          "*"
        ]
      },
      {
        "name": "bj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_eq.js",
    "memberof": null,
    "longname": "src/1-new/compare/_eq.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _cmp } from '.' ;\n\nexport const _eq = ( a , ai , aj , b , bi , bj ) => _cmp( a , ai , aj , b , bi , bj ) === 0 ;\n"
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_eq",
    "memberof": "src/1-new/compare/_eq.js",
    "longname": "src/1-new/compare/_eq.js~_eq",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_eq.js",
    "importStyle": "{_eq}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_ge.js",
    "memberof": null,
    "longname": "src/1-new/compare/_ge.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _cmp } from '.' ;\n\nexport const _ge = ( a , ai , aj , b , bi , bj ) => _cmp( a , ai , aj , b , bi , bj ) >= 0 ;\n"
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_ge",
    "memberof": "src/1-new/compare/_ge.js",
    "longname": "src/1-new/compare/_ge.js~_ge",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_ge.js",
    "importStyle": "{_ge}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_gt.js",
    "memberof": null,
    "longname": "src/1-new/compare/_gt.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _cmp } from '.' ;\n\nexport const _gt = ( a , ai , aj , b , bi , bj ) => _cmp( a , ai , aj , b , bi , bj ) > 0 ;\n"
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_gt",
    "memberof": "src/1-new/compare/_gt.js",
    "longname": "src/1-new/compare/_gt.js~_gt",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_gt.js",
    "importStyle": "{_gt}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_jz.js",
    "memberof": null,
    "longname": "src/1-new/compare/_jz.js",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "content": "\n/**\n * Returns true if number is 0.\n *\n * @param {array} a first operand\n * @param {int} ai a left\n * @param {int} aj a right\n */\n\nexport function _jz ( a , ai , aj ) {\n\n\tfor ( ; ai < aj ; ++ai ) if ( a[ai] !== 0 ) return false ;\n\n\treturn true ;\n\n}\n"
  },
  {
    "__docId__": 109,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_jz",
    "memberof": "src/1-new/compare/_jz.js",
    "longname": "src/1-new/compare/_jz.js~_jz",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_jz.js",
    "importStyle": "{_jz}",
    "description": "Returns true if number is 0.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "first operand"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "a left"
      },
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "a right"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_le.js",
    "memberof": null,
    "longname": "src/1-new/compare/_le.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _cmp } from '.' ;\n\nexport const _le = ( a , ai , aj , b , bi , bj ) => _cmp( a , ai , aj , b , bi , bj ) <= 0 ;\n"
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_le",
    "memberof": "src/1-new/compare/_le.js",
    "longname": "src/1-new/compare/_le.js~_le",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_le.js",
    "importStyle": "{_le}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_lt.js",
    "memberof": null,
    "longname": "src/1-new/compare/_lt.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _cmp } from '.' ;\n\nexport const _lt = ( a , ai , aj , b , bi , bj ) => _cmp( a , ai , aj , b , bi , bj ) < 0 ;\n"
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_lt",
    "memberof": "src/1-new/compare/_lt.js",
    "longname": "src/1-new/compare/_lt.js~_lt",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_lt.js",
    "importStyle": "{_lt}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/_ne.js",
    "memberof": null,
    "longname": "src/1-new/compare/_ne.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _cmp } from '.' ;\n\nexport const _ne = ( a , ai , aj , b , bi , bj ) => _cmp( a , ai , aj , b , bi , bj ) !== 0 ;\n"
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_ne",
    "memberof": "src/1-new/compare/_ne.js",
    "longname": "src/1-new/compare/_ne.js~_ne",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/compare/_ne.js",
    "importStyle": "{_ne}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/compare/index.js",
    "memberof": null,
    "longname": "src/1-new/compare/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './_CMP' ;\nexport * from './_cmp' ;\nexport * from './_eq' ;\nexport * from './_ge' ;\nexport * from './_gt' ;\nexport * from './_jz' ;\nexport * from './_le' ;\nexport * from './_lt' ;\nexport * from './_ne' ;\n"
  },
  {
    "__docId__": 117,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_alloc.js",
    "memberof": null,
    "longname": "src/1-new/convert/_alloc.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _alloc ( n ) {\n\n\treturn new Array( n ) ;\n\n}\n"
  },
  {
    "__docId__": 118,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_alloc",
    "memberof": "src/1-new/convert/_alloc.js",
    "longname": "src/1-new/convert/_alloc.js~_alloc",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_alloc.js",
    "importStyle": "{_alloc}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_build.js",
    "memberof": null,
    "longname": "src/1-new/convert/_build.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _build ( base , number ) {\n\n\tconst data = [ ] ;\n\n\tlet q = number ;\n\tconst d = base ;\n\n\twhile ( q >= d ) {\n\t\tconst r = q % d ;\n\t\tdata.push( r ) ;\n\t\tq = ( q - r ) / d ;\n\t}\n\n\tdata.push( q ) ;\n\n\treturn data.reverse( ) ;\n\n}\n"
  },
  {
    "__docId__": 120,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_build",
    "memberof": "src/1-new/convert/_build.js",
    "longname": "src/1-new/convert/_build.js~_build",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_build.js",
    "importStyle": "{_build}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "base",
        "types": [
          "*"
        ]
      },
      {
        "name": "number",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_chr.js",
    "memberof": null,
    "longname": "src/1-new/convert/_chr.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _chr ( x ) {\n\n\tif ( x < 10 ) return String.fromCharCode( 48 + x ) ;\n\treturn String.fromCharCode( 87 + x ) ;\n\n}\n"
  },
  {
    "__docId__": 122,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_chr",
    "memberof": "src/1-new/convert/_chr.js",
    "longname": "src/1-new/convert/_chr.js~_chr",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_chr.js",
    "importStyle": "{_chr}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 123,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_convert.js",
    "memberof": null,
    "longname": "src/1-new/convert/_convert.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _copy , _convert_to_smaller , _convert_to_larger } from './' ;\n\n/**\n *\n * @param {Number} f the base to convert from\n * @param {Number} t the base to convert to\n * @param {Array} a the origin array\n * @param {Number} ai start offset in the origin array\n * @param {Number} aj end offset in the origin array\n * @param {Array} b the destination array\n * @param {Number} bi start offset in the destination array\n * @param {Number} bj end offset in the destination array\n */\n\nexport function _convert ( f , t , a , ai , aj , b , bi , bj ) {\n\n\tif ( f > t ) return _convert_to_smaller( f , t , a , ai , aj , b , bi , bj ) ;\n\tif ( f < t ) return _convert_to_larger( f , t , a , ai , aj , b , bi , bj ) ;\n\treturn _copy( a , ai , aj , b , bi ) ;\n\n}\n"
  },
  {
    "__docId__": 124,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_convert",
    "memberof": "src/1-new/convert/_convert.js",
    "longname": "src/1-new/convert/_convert.js~_convert",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_convert.js",
    "importStyle": "{_convert}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "the base to convert from"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "the base to convert to"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "start offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "end offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "start offset in the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "end offset in the destination array"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_convert_slow.js",
    "memberof": null,
    "longname": "src/1-new/convert/_convert_slow.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _build , _alloc , _reset , _copy } from '.' ;\nimport { _div } from '../arithmetic' ;\nimport { _jz } from '../compare' ;\n\n/**\n *\n * @param {Number} f the base to convert from\n * @param {Number} t the base to convert to\n * @param {Array} a the origin array\n * @param {Number} ai start offset in the origin array\n * @param {Number} aj end offset in the origin array\n * @param {Array} b the destination array\n * @param {Number} bi start offset in the destination array\n * @param {Number} bj end offset in the destination array\n */\n\nexport function _convert_slow ( f , t , a , ai , aj , b , bi , bj ) {\n\n\tconst d = _build( f , t ) ;\n\tconst di = 0 ;\n\tconst dj = d.length ;\n\tconst qi = 0 ;\n\tconst qj = aj - ai ;\n\tconst q = _alloc( qj - qi ) ;\n\n\twhile ( true ) {\n\n\t\t_reset( q , qi , qj ) ;\n\n\t\t_div( f , a , ai , aj , d , di , dj , q , qi ) ;\n\n\t\t--bj ;\n\t\tlet x = 0 ;\n\n\t\tfor ( let k = ai ; k < aj ; ++k ) {\n\t\t\tx *= f ;\n\t\t\tx += a[k] ;\n\t\t}\n\n\t\tb[bj] = x ;\n\n\t\tif ( _jz( q , qi , qj ) ) return ;\n\n\t\t_copy( q , qi , qj , a , ai ) ;\n\n\t}\n\n}\n"
  },
  {
    "__docId__": 126,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_convert_slow",
    "memberof": "src/1-new/convert/_convert_slow.js",
    "longname": "src/1-new/convert/_convert_slow.js~_convert_slow",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_convert_slow.js",
    "importStyle": "{_convert_slow}",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "the base to convert from"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "the base to convert to"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "start offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "end offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "start offset in the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "end offset in the destination array"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_convert_to_larger.js",
    "memberof": null,
    "longname": "src/1-new/convert/_convert_to_larger.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _log , _convert_slow , _convert_to_larger_fast } from './' ;\n\n/**\n *\n * @param {Number} f the base to convert from\n * @param {Number} t the base to convert to\n * @param {Array} a the origin array\n * @param {Number} ai start offset in the origin array\n * @param {Number} aj end offset in the origin array\n * @param {Array} b the destination array\n * @param {Number} bi start offset in the destination array\n * @param {Number} bj end offset in the destination array\n */\n\nexport function _convert_to_larger ( f , t , a , ai , aj , b , bi , bj ) {\n\n\tconst [ z , x ] = _log( t , f ) ;\n\n\tif ( x === 1 ) return _convert_to_larger_fast( f , z , a , ai , aj , b , bi , bj ) ;\n\n\treturn _convert_slow( f , t , a , ai , aj , b , bi , bj ) ;\n\n}\n"
  },
  {
    "__docId__": 128,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_convert_to_larger",
    "memberof": "src/1-new/convert/_convert_to_larger.js",
    "longname": "src/1-new/convert/_convert_to_larger.js~_convert_to_larger",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_convert_to_larger.js",
    "importStyle": "{_convert_to_larger}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "the base to convert from"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "the base to convert to"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "start offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "end offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "start offset in the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "end offset in the destination array"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_convert_to_larger_fast.js",
    "memberof": null,
    "longname": "src/1-new/convert/_convert_to_larger_fast.js",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "content": "\n\n/**\n *\n * @param {Number} ar the base to convert from\n * @param {Number} z if br is the base to convert to then log(br) = z log(ar)\n * @param {Array} a the origin array\n * @param {Number} ai start offset in the origin array\n * @param {Number} aj end offset in the origin array\n * @param {Array} b the destination array\n * @param {Number} bi start offset in the destination array\n * @param {Number} bj end offset in the destination array\n */\n\nexport function _convert_to_larger_fast ( ar , z , a , ai , aj , b , bi , bj ) {\n\n\tvar m, n, q, r, i, w, t;\n\n\tm = aj - ai;\n\tn = bj - bi;\n\n\t// number of parts of first\n\t// destination block if incomplete\n\tr = m % z;\n\n\t// number of complete blocks in destination\n\tq = (m - r) / z;\n\n\t// total number of blocks in destination\n\t// (complete ones + first if incomplete)\n\tw = q + !!r;\n\n\n\tif (n >= w) {\n\t\t// if destination can contain more than\n\t\t// what is available in source then\n\t\t// compute the effective write start\n\t\t// in destination and set i to the correct\n\t\t// offset according to the size\n\t\t// (in source blocks) of the\n\t\t// first destination block if incomplete\n\t\tbi = bj - w;\n\t\ti = (z - r) % z;\n\t}\n\telse {\n\t\t// if source contains more than what\n\t\t// destination can handle set the effective\n\t\t// read start in source and set i to 0 because\n\t\t// all blocks will be complete\n\t\tai = aj - n * z;\n\t\ti = 0;\n\t}\n\n\tfor (; ai < aj && bi < bj; ++bi) {\n\t\tt = 0;\n\t\tfor (; i < z; ++i) {\n\t\t\tt *= ar;     // aggregate source blocks\n\t\t\tt += a[ai];  // using simple\n\t\t\t++ai;        // multiply + add\n\t\t}\n\t\tb[bi] = t;  // set block in destination\n\t\ti = 0;\n\t}\n\n}\n"
  },
  {
    "__docId__": 130,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_convert_to_larger_fast",
    "memberof": "src/1-new/convert/_convert_to_larger_fast.js",
    "longname": "src/1-new/convert/_convert_to_larger_fast.js~_convert_to_larger_fast",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_convert_to_larger_fast.js",
    "importStyle": "{_convert_to_larger_fast}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ar",
        "description": "the base to convert from"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "if br is the base to convert to then log(br) = z log(ar)"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "start offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "end offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "start offset in the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "end offset in the destination array"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_convert_to_smaller.js",
    "memberof": null,
    "longname": "src/1-new/convert/_convert_to_smaller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _log , _convert_slow , _convert_to_smaller_fast } from './' ;\n\n/**\n *\n * @param {Number} f the base to convert from\n * @param {Number} t the base to convert to\n * @param {Array} a the origin array\n * @param {Number} ai start offset in the origin array\n * @param {Number} aj end offset in the origin array\n * @param {Array} b the destination array\n * @param {Number} bi start offset in the destination array\n * @param {Number} bj end offset in the destination array\n */\n\nexport function _convert_to_smaller ( f , t , a , ai , aj , b , bi , bj ) {\n\n\tconst [ z , x ] = _log( f , t ) ;\n\n\tif ( x === 1 ) return _convert_to_smaller_fast( t , z , a , ai , aj , b , bi , bj ) ;\n\n\treturn _convert_slow( f , t , a , ai , aj , b , bi , bj ) ;\n\n}\n"
  },
  {
    "__docId__": 132,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_convert_to_smaller",
    "memberof": "src/1-new/convert/_convert_to_smaller.js",
    "longname": "src/1-new/convert/_convert_to_smaller.js~_convert_to_smaller",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_convert_to_smaller.js",
    "importStyle": "{_convert_to_smaller}",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "the base to convert from"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "the base to convert to"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "start offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "end offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "start offset in the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "end offset in the destination array"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_convert_to_smaller_fast.js",
    "memberof": null,
    "longname": "src/1-new/convert/_convert_to_smaller_fast.js",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "content": "\n/**\n *\n * @param {Number} br the base to convert to\n * @param {Number} z if ar is the base to convert to then log(ar) = z log(br)\n * @param {Array} a the origin array\n * @param {Number} ai start offset in the origin array\n * @param {Number} aj end offset in the origin array\n * @param {Array} b the destination array\n * @param {Number} bi start offset in the destination array\n * @param {Number} bj end offset in the destination array\n */\n\nexport function _convert_to_smaller_fast ( br , z , a , ai , aj , b , bi , bj ) {\n\n\tvar m, n, q, r, i, w, t;\n\n\tm = bj - bi;\n\tn = aj - ai;\n\n\t// number of parts of first\n\t// destination block if incomplete\n\tr = m % z;\n\n\t// number of complete blocks in destination\n\tq = (m - r) / z;\n\n\t// total number of blocks in destination\n\t// (complete ones + first if incomplete)\n\tw = q + !!r;\n\n\n\tif (n >= w) {\n\t\t// if source contains more than what\n\t\t// destination can handle set the effective\n\t\t// read start in source and set i to the correct\n\t\t// offset according to the size\n\t\t// (in destination blocks) of the\n\t\t// first source block if incomplete\n\t\tai = aj - w;\n\t\ti = (z - r) % z;\n\t}\n\telse {\n\t\t// if destination can contain more than\n\t\t// what is available in source then\n\t\t// compute the effective write start\n\t\t// in destination and set i to 0 because\n\t\t// all blocks will be complete\n\t\tbi = bj - n * z;\n\t\ti = 0;\n\t}\n\n\tfor (; ai < aj && bi < bj; ++ai) {\n\t\tq = a[ai];\n\t\tt = bi + z - 1 - i;\n\t\tbi += z - i;\n\t\tfor (; i < z; ++i) {\n\t\t\tr = q % br;        // unpack source blocks\n\t\t\tq = (q - r) / br;  // using simple\n\t\t\tb[t] = r;          // modulo + quotient\n\t\t\t--t;\n\t\t}\n\t\ti = 0;\n\t}\n\n}\n"
  },
  {
    "__docId__": 134,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_convert_to_smaller_fast",
    "memberof": "src/1-new/convert/_convert_to_smaller_fast.js",
    "longname": "src/1-new/convert/_convert_to_smaller_fast.js~_convert_to_smaller_fast",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_convert_to_smaller_fast.js",
    "importStyle": "{_convert_to_smaller_fast}",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "br",
        "description": "the base to convert to"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "if ar is the base to convert to then log(ar) = z log(br)"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": "start offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": "end offset in the origin array"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": "start offset in the destination array"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": "end offset in the destination array"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_copy.js",
    "memberof": null,
    "longname": "src/1-new/convert/_copy.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _copy ( a , ai , aj , b , bi ) {\n\n\tfor ( ; ai < aj ; ++ai, ++bi ) b[bi] = a[ai] ;\n\n}\n"
  },
  {
    "__docId__": 136,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_copy",
    "memberof": "src/1-new/convert/_copy.js",
    "longname": "src/1-new/convert/_copy.js~_copy",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_copy.js",
    "importStyle": "{_copy}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "bi",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_fill.js",
    "memberof": null,
    "longname": "src/1-new/convert/_fill.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _fill ( a , ai , aj , v ) {\n\n\tfor ( let i = ai ; i < aj ; ++i ) a[i] = v ;\n\n}\n"
  },
  {
    "__docId__": 138,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_fill",
    "memberof": "src/1-new/convert/_fill.js",
    "longname": "src/1-new/convert/_fill.js~_fill",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_fill.js",
    "importStyle": "{_fill}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      },
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_int.js",
    "memberof": null,
    "longname": "src/1-new/convert/_int.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _int ( x ) {\n\n\tif ( x >= '0' && x <= '9' ) return x.charCodeAt( 0 ) - 48 ;\n\tif ( x >= 'A' && x <= 'Z' ) return x.charCodeAt( 0 ) - 55 ;\n\tif ( x >= 'a' && x <= 'z' ) return x.charCodeAt( 0 ) - 87 ;\n\n\tthrow 'invalid literal for _int: ' + x ;\n\n}\n"
  },
  {
    "__docId__": 140,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_int",
    "memberof": "src/1-new/convert/_int.js",
    "longname": "src/1-new/convert/_int.js~_int",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_int.js",
    "importStyle": "{_int}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_log.js",
    "memberof": null,
    "longname": "src/1-new/convert/_log.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _log ( x , y ) {\n\n\tlet z = 0 ;\n\n\twhile ( x >= y ) {\n\t\tif ( x % y ) break ;\n\t\tx /= y ;\n\t\t++z ;\n\t}\n\n\treturn [ z , x ] ;\n\n}\n"
  },
  {
    "__docId__": 142,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_log",
    "memberof": "src/1-new/convert/_log.js",
    "longname": "src/1-new/convert/_log.js~_log",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_log.js",
    "importStyle": "{_log}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_reset.js",
    "memberof": null,
    "longname": "src/1-new/convert/_reset.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _fill } from './'\n\nexport function _reset ( a , ai , aj ) {\n\n\t_fill( a , ai , aj , 0 ) ;\n\n}\n"
  },
  {
    "__docId__": 144,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_reset",
    "memberof": "src/1-new/convert/_reset.js",
    "longname": "src/1-new/convert/_reset.js~_reset",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_reset.js",
    "importStyle": "{_reset}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_to_string.js",
    "memberof": null,
    "longname": "src/1-new/convert/_to_string.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _chr } from '.' ;\n\nexport function _to_string ( b ) {\n\n\tconst n = b.length ;\n\n\tconst data = [ ] ;\n\n\tfor ( let k = 0 ; k < n ; ++k ) data.push( _chr( b[k] ) ) ;\n\n\treturn data.join( '' ) ;\n\n}\n"
  },
  {
    "__docId__": 146,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_to_string",
    "memberof": "src/1-new/convert/_to_string.js",
    "longname": "src/1-new/convert/_to_string.js~_to_string",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_to_string.js",
    "importStyle": "{_to_string}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_trim_positive.js",
    "memberof": null,
    "longname": "src/1-new/convert/_trim_positive.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "\nexport function _trim_positive ( a , ai , aj ) {\n\n\twhile ( a[ai] === 0 && ai < aj ) ++ai ;\n\n\treturn ai ;\n\n}\n"
  },
  {
    "__docId__": 148,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_trim_positive",
    "memberof": "src/1-new/convert/_trim_positive.js",
    "longname": "src/1-new/convert/_trim_positive.js~_trim_positive",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_trim_positive.js",
    "importStyle": "{_trim_positive}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/_zeros.js",
    "memberof": null,
    "longname": "src/1-new/convert/_zeros.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _alloc , _reset } from './' ;\n\nexport function _zeros ( n ) {\n\n\tconst a = _alloc( n ) ;\n\n\t_reset( a , 0 , n ) ;\n\n\treturn a ;\n\n}\n"
  },
  {
    "__docId__": 150,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_zeros",
    "memberof": "src/1-new/convert/_zeros.js",
    "longname": "src/1-new/convert/_zeros.js~_zeros",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/_zeros.js",
    "importStyle": "{_zeros}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 151,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/convert.js",
    "memberof": null,
    "longname": "src/1-new/convert/convert.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { convert_keep_zeros , trim_natural } from './' ;\n\nexport function convert ( f , t , a , ai , aj ) {\n\n\tconst b = convert_keep_zeros( f , t , a , ai , aj ) ;\n\n\treturn trim_natural( b , 0 , b.length ) ;\n\n}\n"
  },
  {
    "__docId__": 152,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "convert",
    "memberof": "src/1-new/convert/convert.js",
    "longname": "src/1-new/convert/convert.js~convert",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/convert.js",
    "importStyle": "{convert}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/convert_keep_zeros.js",
    "memberof": null,
    "longname": "src/1-new/convert/convert_keep_zeros.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _zeros , _convert } from './' ;\n\nexport function convert_keep_zeros ( f , t , a , ai , aj ) {\n\n\tconst bi = 0 ;\n\tconst bj = Math.ceil( Math.log( f ) / Math.log( t ) * ( aj - ai ) ) ;\n\tconst b = _zeros( bj - bi ) ;\n\n\t_convert( f , t , a , ai , aj , b , bi , bj ) ;\n\n\treturn b ;\n\n}\n"
  },
  {
    "__docId__": 154,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "convert_keep_zeros",
    "memberof": "src/1-new/convert/convert_keep_zeros.js",
    "longname": "src/1-new/convert/convert_keep_zeros.js~convert_keep_zeros",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/convert_keep_zeros.js",
    "importStyle": "{convert_keep_zeros}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/index.js",
    "memberof": null,
    "longname": "src/1-new/convert/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './_alloc' ;\nexport * from './_build' ;\nexport * from './_chr' ;\nexport * from './_convert' ;\nexport * from './_convert_slow' ;\nexport * from './_convert_to_larger' ;\nexport * from './_convert_to_larger_fast' ;\nexport * from './_convert_to_smaller' ;\nexport * from './_convert_to_smaller_fast' ;\nexport * from './_copy' ;\nexport * from './_fill' ;\nexport * from './_int' ;\nexport * from './_log' ;\nexport * from './_reset' ;\nexport * from './_to_string' ;\nexport * from './_trim_positive' ;\nexport * from './_zeros' ;\nexport * from './convert' ;\nexport * from './convert_keep_zeros' ;\nexport * from './parse' ;\nexport * from './parse_keep_zeros' ;\nexport * from './stringify' ;\nexport * from './stringify_keep_zeros' ;\nexport * from './trim_natural' ;\n"
  },
  {
    "__docId__": 156,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/parse.js",
    "memberof": null,
    "longname": "src/1-new/convert/parse.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { parse_keep_zeros , trim_natural } from './' ;\n\nexport function parse ( f , t , string ) {\n\n\tconst b = parse_keep_zeros( f , t , string ) ;\n\n\treturn trim_natural( b , 0 , b.length ) ;\n\n}\n"
  },
  {
    "__docId__": 157,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/1-new/convert/parse.js",
    "longname": "src/1-new/convert/parse.js~parse",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/parse.js",
    "importStyle": "{parse}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "string",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/parse_keep_zeros.js",
    "memberof": null,
    "longname": "src/1-new/convert/parse_keep_zeros.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _int , convert_keep_zeros } from './' ;\n\nexport function parse_keep_zeros ( f , t , string ) {\n\n\tif ( f > 36 ) throw 'f > 36 not implemented' ;\n\n\tconst n = string.length ;\n\n\tconst a = [ ] ;\n\n\tfor ( let k = 0 ; k < n ; ++k ) a.push( _int( string[k] ) ) ;\n\n\treturn convert_keep_zeros( f , t , a , 0 , n ) ;\n\n}\n"
  },
  {
    "__docId__": 159,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parse_keep_zeros",
    "memberof": "src/1-new/convert/parse_keep_zeros.js",
    "longname": "src/1-new/convert/parse_keep_zeros.js~parse_keep_zeros",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/parse_keep_zeros.js",
    "importStyle": "{parse_keep_zeros}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "string",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/stringify.js",
    "memberof": null,
    "longname": "src/1-new/convert/stringify.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { convert , _to_string } from './' ;\n\nexport function stringify ( f , t , a , ai , aj ) {\n\n\tif ( t > 36 ) throw 't > 36 not implemented' ;\n\n\tconst b = convert( f , t , a , ai , aj ) ;\n\n\treturn _to_string( b ) ;\n\n}\n"
  },
  {
    "__docId__": 161,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "stringify",
    "memberof": "src/1-new/convert/stringify.js",
    "longname": "src/1-new/convert/stringify.js~stringify",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/stringify.js",
    "importStyle": "{stringify}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/stringify_keep_zeros.js",
    "memberof": null,
    "longname": "src/1-new/convert/stringify_keep_zeros.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { convert_keep_zeros , _to_string } from './' ;\n\nexport function stringify_keep_zeros ( f , t , a , ai , aj ) {\n\n\tif ( t > 36 ) throw 't > 36 not implemented' ;\n\n\tconst b = convert_keep_zeros( f , t , a , ai , aj ) ;\n\n\treturn _to_string( b ) ;\n\n}\n"
  },
  {
    "__docId__": 163,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "stringify_keep_zeros",
    "memberof": "src/1-new/convert/stringify_keep_zeros.js",
    "longname": "src/1-new/convert/stringify_keep_zeros.js~stringify_keep_zeros",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/stringify_keep_zeros.js",
    "importStyle": "{stringify_keep_zeros}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      },
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/convert/trim_natural.js",
    "memberof": null,
    "longname": "src/1-new/convert/trim_natural.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { _trim_positive , _alloc , _copy } from '.' ;\n\nexport function trim_natural ( a , ai , aj ) {\n\n\tconst x = _trim_positive( a , ai , aj ) ;\n\n\tif ( x >= aj ) return [ 0 ] ;\n\n\tconst b = _alloc( aj - x ) ;\n\n\t_copy( a , x , aj , b , 0 ) ;\n\n\treturn b ;\n\n}\n"
  },
  {
    "__docId__": 165,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "trim_natural",
    "memberof": "src/1-new/convert/trim_natural.js",
    "longname": "src/1-new/convert/trim_natural.js~trim_natural",
    "access": null,
    "export": true,
    "importPath": "aureooms-js-integer-little-endian/src/1-new/convert/trim_natural.js",
    "importStyle": "{trim_natural}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "ai",
        "types": [
          "*"
        ]
      },
      {
        "name": "aj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/1-new/index.js",
    "memberof": null,
    "longname": "src/1-new/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './arithmetic' ;\nexport * from './compare' ;\nexport * from './convert' ;\n"
  },
  {
    "__docId__": 167,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export * from './0-legacy' ;\nexport * from './1-new' ;\n"
  },
  {
    "__docId__": 169,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 218,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 221,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 222,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]