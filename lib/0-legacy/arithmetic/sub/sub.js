"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

/**
 * @param {int} r base (radix)
 */

var bsub_t = exports.bsub_t = function bsub_t(r) {

	/**
  * Subtracts two big endian arrays, k >= i >= j
  * wraps
  *
  * @param {array} a first operand
  * @param {int} ai a left
  * @param {int} aj a right
  * @param {array} b second operand
  * @param {int} bi b left
  * @param {int} bj b right
  * @param {array} c result, must be 0 initialized
  * @param {int} ci c left
  * @param {int} cj c right
  */

	return function (a, ai, aj, b, bi, bj, c, ci, cj) {
		var T,
		    C = 0;

		while (--bj >= bi) {
			--aj;--cj;
			T = C;
			C = a[aj] < b[bj] + T;
			c[cj] = a[aj] - b[bj] + (C * r - T);
		}

		while (--aj >= ai) {
			--cj;
			T = C;
			C = a[aj] < T;
			c[cj] = a[aj] + (C * r - T);
		}

		if (C) {
			while (--cj >= ci) {
				c[cj] = r - 1;
			}
		}
	};
};
/**
 * @param {int} r base (radix)
 */

var lsub_t = exports.lsub_t = function lsub_t(r) {

	/**
  * Subtracts two little endian arrays, k >= i >= j
  * wraps
  *
  * @param {array} a first operand
  * @param {int} ai a left
  * @param {int} aj a right
  * @param {array} b second operand
  * @param {int} bi b left
  * @param {int} bj b right
  * @param {array} c result, must be 0 initialized
  * @param {int} ci c left
  * @param {int} cj c right
  */

	return function (a, ai, aj, b, bi, bj, c, ci, cj) {
		var T,
		    C = 0;

		while (bi < bj) {
			T = C;
			C = a[ai] < b[bi] + T;
			c[ci] = a[ai] - b[bi] + (C * r - T);
			++ai;++bi;++ci;
		}

		while (ai < aj) {
			T = C;
			C = a[ai] < T;
			c[ci] = a[ai] + (C * r - T);
			++ai;++ci;
		}

		if (C) {
			while (ci < cj) {
				c[ci] = r - 1;
				++ci;
			}
		}
	};
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy8wLWxlZ2FjeS9hcml0aG1ldGljL3N1Yi9zdWIuanMiXSwibmFtZXMiOlsiYnN1Yl90IiwiciIsImEiLCJhaSIsImFqIiwiYiIsImJpIiwiYmoiLCJjIiwiY2kiLCJjaiIsIlQiLCJDIiwibHN1Yl90Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQTs7OztBQUtPLElBQU1BLDBCQUFTLFNBQVRBLE1BQVMsQ0FBU0MsQ0FBVCxFQUFXOztBQUVoQzs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsUUFBTyxVQUFTQyxDQUFULEVBQVlDLEVBQVosRUFBZ0JDLEVBQWhCLEVBQW9CQyxDQUFwQixFQUF1QkMsRUFBdkIsRUFBMkJDLEVBQTNCLEVBQStCQyxDQUEvQixFQUFrQ0MsRUFBbEMsRUFBc0NDLEVBQXRDLEVBQXlDO0FBQy9DLE1BQUlDLENBQUo7QUFBQSxNQUFPQyxJQUFJLENBQVg7O0FBRUEsU0FBTSxFQUFFTCxFQUFGLElBQVFELEVBQWQsRUFBaUI7QUFDaEIsS0FBRUYsRUFBRixDQUFNLEVBQUVNLEVBQUY7QUFDTkMsT0FBSUMsQ0FBSjtBQUNBQSxPQUFJVixFQUFFRSxFQUFGLElBQVFDLEVBQUVFLEVBQUYsSUFBUUksQ0FBcEI7QUFDQUgsS0FBRUUsRUFBRixJQUFRUixFQUFFRSxFQUFGLElBQVFDLEVBQUVFLEVBQUYsQ0FBUixJQUFpQkssSUFBRVgsQ0FBRixHQUFNVSxDQUF2QixDQUFSO0FBQ0E7O0FBRUQsU0FBTSxFQUFFUCxFQUFGLElBQVFELEVBQWQsRUFBaUI7QUFDaEIsS0FBRU8sRUFBRjtBQUNBQyxPQUFJQyxDQUFKO0FBQ0FBLE9BQUlWLEVBQUVFLEVBQUYsSUFBUU8sQ0FBWjtBQUNBSCxLQUFFRSxFQUFGLElBQVFSLEVBQUVFLEVBQUYsS0FBU1EsSUFBRVgsQ0FBRixHQUFNVSxDQUFmLENBQVI7QUFDQTs7QUFFRCxNQUFHQyxDQUFILEVBQUs7QUFDSixVQUFNLEVBQUVGLEVBQUYsSUFBUUQsRUFBZCxFQUFpQjtBQUNoQkQsTUFBRUUsRUFBRixJQUFRVCxJQUFJLENBQVo7QUFDQTtBQUNEO0FBRUQsRUF2QkQ7QUF3QkEsQ0F6Q007QUEwQ1A7Ozs7QUFLTyxJQUFNWSwwQkFBUyxTQUFUQSxNQUFTLENBQVNaLENBQVQsRUFBVzs7QUFFaEM7Ozs7Ozs7Ozs7Ozs7OztBQWVBLFFBQU8sVUFBU0MsQ0FBVCxFQUFZQyxFQUFaLEVBQWdCQyxFQUFoQixFQUFvQkMsQ0FBcEIsRUFBdUJDLEVBQXZCLEVBQTJCQyxFQUEzQixFQUErQkMsQ0FBL0IsRUFBa0NDLEVBQWxDLEVBQXNDQyxFQUF0QyxFQUF5QztBQUMvQyxNQUFJQyxDQUFKO0FBQUEsTUFBT0MsSUFBSSxDQUFYOztBQUVBLFNBQU1OLEtBQUtDLEVBQVgsRUFBYztBQUNiSSxPQUFJQyxDQUFKO0FBQ0FBLE9BQUlWLEVBQUVDLEVBQUYsSUFBUUUsRUFBRUMsRUFBRixJQUFRSyxDQUFwQjtBQUNBSCxLQUFFQyxFQUFGLElBQVFQLEVBQUVDLEVBQUYsSUFBUUUsRUFBRUMsRUFBRixDQUFSLElBQWlCTSxJQUFFWCxDQUFGLEdBQU1VLENBQXZCLENBQVI7QUFDQSxLQUFFUixFQUFGLENBQU0sRUFBRUcsRUFBRixDQUFNLEVBQUVHLEVBQUY7QUFDWjs7QUFFRCxTQUFNTixLQUFLQyxFQUFYLEVBQWM7QUFDYk8sT0FBSUMsQ0FBSjtBQUNBQSxPQUFJVixFQUFFQyxFQUFGLElBQVFRLENBQVo7QUFDQUgsS0FBRUMsRUFBRixJQUFRUCxFQUFFQyxFQUFGLEtBQVNTLElBQUVYLENBQUYsR0FBTVUsQ0FBZixDQUFSO0FBQ0EsS0FBRVIsRUFBRixDQUFNLEVBQUVNLEVBQUY7QUFDTjs7QUFFRCxNQUFHRyxDQUFILEVBQUs7QUFDSixVQUFNSCxLQUFLQyxFQUFYLEVBQWM7QUFDYkYsTUFBRUMsRUFBRixJQUFRUixJQUFJLENBQVo7QUFDQSxNQUFFUSxFQUFGO0FBQ0E7QUFDRDtBQUVELEVBeEJEO0FBeUJBLENBMUNNIiwiZmlsZSI6InN1Yi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBAcGFyYW0ge2ludH0gciBiYXNlIChyYWRpeClcbiAqL1xuXG5cbmV4cG9ydCBjb25zdCBic3ViX3QgPSBmdW5jdGlvbihyKXtcblxuXHQvKipcblx0ICogU3VidHJhY3RzIHR3byBiaWcgZW5kaWFuIGFycmF5cywgayA+PSBpID49IGpcblx0ICogd3JhcHNcblx0ICpcblx0ICogQHBhcmFtIHthcnJheX0gYSBmaXJzdCBvcGVyYW5kXG5cdCAqIEBwYXJhbSB7aW50fSBhaSBhIGxlZnRcblx0ICogQHBhcmFtIHtpbnR9IGFqIGEgcmlnaHRcblx0ICogQHBhcmFtIHthcnJheX0gYiBzZWNvbmQgb3BlcmFuZFxuXHQgKiBAcGFyYW0ge2ludH0gYmkgYiBsZWZ0XG5cdCAqIEBwYXJhbSB7aW50fSBiaiBiIHJpZ2h0XG5cdCAqIEBwYXJhbSB7YXJyYXl9IGMgcmVzdWx0LCBtdXN0IGJlIDAgaW5pdGlhbGl6ZWRcblx0ICogQHBhcmFtIHtpbnR9IGNpIGMgbGVmdFxuXHQgKiBAcGFyYW0ge2ludH0gY2ogYyByaWdodFxuXHQgKi9cblxuXHRyZXR1cm4gZnVuY3Rpb24oYSwgYWksIGFqLCBiLCBiaSwgYmosIGMsIGNpLCBjail7XG5cdFx0dmFyIFQsIEMgPSAwO1xuXG5cdFx0d2hpbGUoLS1iaiA+PSBiaSl7XG5cdFx0XHQtLWFqOyAtLWNqO1xuXHRcdFx0VCA9IEM7XG5cdFx0XHRDID0gYVthal0gPCBiW2JqXSArIFQ7XG5cdFx0XHRjW2NqXSA9IGFbYWpdIC0gYltial0gKyAoQypyIC0gVCk7XG5cdFx0fVxuXG5cdFx0d2hpbGUoLS1haiA+PSBhaSl7XG5cdFx0XHQtLWNqO1xuXHRcdFx0VCA9IEM7XG5cdFx0XHRDID0gYVthal0gPCBUO1xuXHRcdFx0Y1tjal0gPSBhW2FqXSArIChDKnIgLSBUKTtcblx0XHR9XG5cblx0XHRpZihDKXtcblx0XHRcdHdoaWxlKC0tY2ogPj0gY2kpe1xuXHRcdFx0XHRjW2NqXSA9IHIgLSAxO1xuXHRcdFx0fVxuXHRcdH1cblxuXHR9O1xufTtcbi8qKlxuICogQHBhcmFtIHtpbnR9IHIgYmFzZSAocmFkaXgpXG4gKi9cblxuXG5leHBvcnQgY29uc3QgbHN1Yl90ID0gZnVuY3Rpb24ocil7XG5cblx0LyoqXG5cdCAqIFN1YnRyYWN0cyB0d28gbGl0dGxlIGVuZGlhbiBhcnJheXMsIGsgPj0gaSA+PSBqXG5cdCAqIHdyYXBzXG5cdCAqXG5cdCAqIEBwYXJhbSB7YXJyYXl9IGEgZmlyc3Qgb3BlcmFuZFxuXHQgKiBAcGFyYW0ge2ludH0gYWkgYSBsZWZ0XG5cdCAqIEBwYXJhbSB7aW50fSBhaiBhIHJpZ2h0XG5cdCAqIEBwYXJhbSB7YXJyYXl9IGIgc2Vjb25kIG9wZXJhbmRcblx0ICogQHBhcmFtIHtpbnR9IGJpIGIgbGVmdFxuXHQgKiBAcGFyYW0ge2ludH0gYmogYiByaWdodFxuXHQgKiBAcGFyYW0ge2FycmF5fSBjIHJlc3VsdCwgbXVzdCBiZSAwIGluaXRpYWxpemVkXG5cdCAqIEBwYXJhbSB7aW50fSBjaSBjIGxlZnRcblx0ICogQHBhcmFtIHtpbnR9IGNqIGMgcmlnaHRcblx0ICovXG5cblx0cmV0dXJuIGZ1bmN0aW9uKGEsIGFpLCBhaiwgYiwgYmksIGJqLCBjLCBjaSwgY2ope1xuXHRcdHZhciBULCBDID0gMDtcblxuXHRcdHdoaWxlKGJpIDwgYmope1xuXHRcdFx0VCA9IEM7XG5cdFx0XHRDID0gYVthaV0gPCBiW2JpXSArIFQ7XG5cdFx0XHRjW2NpXSA9IGFbYWldIC0gYltiaV0gKyAoQypyIC0gVCk7XG5cdFx0XHQrK2FpOyArK2JpOyArK2NpO1xuXHRcdH1cblxuXHRcdHdoaWxlKGFpIDwgYWope1xuXHRcdFx0VCA9IEM7XG5cdFx0XHRDID0gYVthaV0gPCBUO1xuXHRcdFx0Y1tjaV0gPSBhW2FpXSArIChDKnIgLSBUKTtcblx0XHRcdCsrYWk7ICsrY2k7XG5cdFx0fVxuXG5cdFx0aWYoQyl7XG5cdFx0XHR3aGlsZShjaSA8IGNqKXtcblx0XHRcdFx0Y1tjaV0gPSByIC0gMTtcblx0XHRcdFx0KytjaTtcblx0XHRcdH1cblx0XHR9XG5cblx0fTtcbn07XG4iXX0=