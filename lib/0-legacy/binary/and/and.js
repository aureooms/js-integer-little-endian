"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.and = and;
exports.band_t = band_t;
exports.land_t = land_t;

/**
 *
 * BINARY and APPLIED ON a AND b
 *
 * Meaningful only when r is a power of 2.
 *
 * |a| = |b| = |c| > 0
 *
 *
 */

function and(a, a0, b, b0, c, c0, c1) {

  while (c0 < c1) {
    c[c0++] = a[a0++] & b[b0++];
  }
}

/**
 * BIG ENDIAN BINARY and APPLIED ON a AND b
 *
 * Meaningful only when r is a power of 2.
 *
 * |a| >= |b| > 0
 *
 * treats b as if it was represented with the same number of blocks as a
 */

function band_t(r) {

  var _r = r / 2;

  return function (a, a0, a1, b, b0, b1, c, c0, c1) {

    var at = a1 - b1 + b0;
    var ct = c0 + at - a0;

    if (b[b0] < _r) while (c0 < ct) {
      c[c0++] = 0;
    } else while (c0 < ct) {
      c[c0++] = a[a0++];
    }while (c0 < c1) {
      c[c0++] = a[at++] & b[b0++];
    }
  };
}

/**
 * LITTLE ENDIAN BINARY and APPLIED ON a AND b
 *
 * Meaningful only when r is a power of 2.
 *
 * |a| >= |b| > 0
 *
 * treats b as if it was represented with the same number of blocks as a
 */

function land_t(r) {

  var _r = r / 2;

  return function (a, a0, a1, b, b0, b1, c, c0, c1) {

    var ct = c0 + b1 - b0;

    while (c0 < ct) {
      c[c0++] = a[a0++] & b[b0++];
    }if (b[b0 - 1] < _r) while (c0 < c1) {
      c[c0++] = 0;
    } else while (c0 < c1) {
      c[c0++] = a[a0++];
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy8wLWxlZ2FjeS9iaW5hcnkvYW5kL2FuZC5qcyJdLCJuYW1lcyI6WyJhbmQiLCJiYW5kX3QiLCJsYW5kX3QiLCJhIiwiYTAiLCJiIiwiYjAiLCJjIiwiYzAiLCJjMSIsInIiLCJfciIsImExIiwiYjEiLCJhdCIsImN0Il0sIm1hcHBpbmdzIjoiOzs7OztRQVlnQkEsRyxHQUFBQSxHO1FBaUJBQyxNLEdBQUFBLE07UUErQkFDLE0sR0FBQUEsTTs7QUEzRGhCOzs7Ozs7Ozs7OztBQVdPLFNBQVNGLEdBQVQsQ0FBY0csQ0FBZCxFQUFpQkMsRUFBakIsRUFBcUJDLENBQXJCLEVBQXdCQyxFQUF4QixFQUE0QkMsQ0FBNUIsRUFBK0JDLEVBQS9CLEVBQW1DQyxFQUFuQyxFQUF1Qzs7QUFFN0MsU0FBT0QsS0FBS0MsRUFBWjtBQUFnQkYsTUFBRUMsSUFBRixJQUFVTCxFQUFFQyxJQUFGLElBQVVDLEVBQUVDLElBQUYsQ0FBcEI7QUFBaEI7QUFFQTs7QUFHRDs7Ozs7Ozs7OztBQVVPLFNBQVNMLE1BQVQsQ0FBaUJTLENBQWpCLEVBQW1COztBQUV6QixNQUFJQyxLQUFLRCxJQUFJLENBQWI7O0FBRUEsU0FBTyxVQUFVUCxDQUFWLEVBQWFDLEVBQWIsRUFBaUJRLEVBQWpCLEVBQXFCUCxDQUFyQixFQUF3QkMsRUFBeEIsRUFBNEJPLEVBQTVCLEVBQWdDTixDQUFoQyxFQUFtQ0MsRUFBbkMsRUFBdUNDLEVBQXZDLEVBQTJDOztBQUVqRCxRQUFJSyxLQUFLRixLQUFLQyxFQUFMLEdBQVVQLEVBQW5CO0FBQ0EsUUFBSVMsS0FBS1AsS0FBS00sRUFBTCxHQUFVVixFQUFuQjs7QUFFQSxRQUFJQyxFQUFFQyxFQUFGLElBQVFLLEVBQVosRUFBZ0IsT0FBT0gsS0FBS08sRUFBWjtBQUFnQlIsUUFBRUMsSUFBRixJQUFVLENBQVY7QUFBaEIsS0FBaEIsTUFDZ0IsT0FBT0EsS0FBS08sRUFBWjtBQUFnQlIsUUFBRUMsSUFBRixJQUFVTCxFQUFFQyxJQUFGLENBQVY7QUFBaEIsS0FFaEIsT0FBT0ksS0FBS0MsRUFBWjtBQUFnQkYsUUFBRUMsSUFBRixJQUFVTCxFQUFFVyxJQUFGLElBQVVULEVBQUVDLElBQUYsQ0FBcEI7QUFBaEI7QUFFQSxHQVZEO0FBWUE7O0FBS0Q7Ozs7Ozs7Ozs7QUFVTyxTQUFTSixNQUFULENBQWlCUSxDQUFqQixFQUFtQjs7QUFFekIsTUFBSUMsS0FBS0QsSUFBSSxDQUFiOztBQUVBLFNBQU8sVUFBVVAsQ0FBVixFQUFhQyxFQUFiLEVBQWlCUSxFQUFqQixFQUFxQlAsQ0FBckIsRUFBd0JDLEVBQXhCLEVBQTRCTyxFQUE1QixFQUFnQ04sQ0FBaEMsRUFBbUNDLEVBQW5DLEVBQXVDQyxFQUF2QyxFQUEyQzs7QUFFakQsUUFBSU0sS0FBS1AsS0FBS0ssRUFBTCxHQUFVUCxFQUFuQjs7QUFFQSxXQUFPRSxLQUFLTyxFQUFaO0FBQWdCUixRQUFFQyxJQUFGLElBQVVMLEVBQUVDLElBQUYsSUFBVUMsRUFBRUMsSUFBRixDQUFwQjtBQUFoQixLQUVBLElBQUlELEVBQUVDLEtBQUssQ0FBUCxJQUFZSyxFQUFoQixFQUFvQixPQUFPSCxLQUFLQyxFQUFaO0FBQWdCRixRQUFFQyxJQUFGLElBQVUsQ0FBVjtBQUFoQixLQUFwQixNQUNvQixPQUFPQSxLQUFLQyxFQUFaO0FBQWdCRixRQUFFQyxJQUFGLElBQVVMLEVBQUVDLElBQUYsQ0FBVjtBQUFoQjtBQUdwQixHQVZEO0FBWUEiLCJmaWxlIjoiYW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqXG4gKiBCSU5BUlkgYW5kIEFQUExJRUQgT04gYSBBTkQgYlxuICpcbiAqIE1lYW5pbmdmdWwgb25seSB3aGVuIHIgaXMgYSBwb3dlciBvZiAyLlxuICpcbiAqIHxhfCA9IHxifCA9IHxjfCA+IDBcbiAqXG4gKlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBhbmQgKGEsIGEwLCBiLCBiMCwgYywgYzAsIGMxKSB7XG5cblx0d2hpbGUgKGMwIDwgYzEpIGNbYzArK10gPSBhW2EwKytdICYgYltiMCsrXTtcblxufVxuXG5cbi8qKlxuICogQklHIEVORElBTiBCSU5BUlkgYW5kIEFQUExJRUQgT04gYSBBTkQgYlxuICpcbiAqIE1lYW5pbmdmdWwgb25seSB3aGVuIHIgaXMgYSBwb3dlciBvZiAyLlxuICpcbiAqIHxhfCA+PSB8YnwgPiAwXG4gKlxuICogdHJlYXRzIGIgYXMgaWYgaXQgd2FzIHJlcHJlc2VudGVkIHdpdGggdGhlIHNhbWUgbnVtYmVyIG9mIGJsb2NrcyBhcyBhXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGJhbmRfdCAocil7XG5cblx0dmFyIF9yID0gciAvIDI7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChhLCBhMCwgYTEsIGIsIGIwLCBiMSwgYywgYzAsIGMxKSB7XG5cblx0XHR2YXIgYXQgPSBhMSAtIGIxICsgYjA7XG5cdFx0dmFyIGN0ID0gYzAgKyBhdCAtIGEwO1xuXG5cdFx0aWYgKGJbYjBdIDwgX3IpIHdoaWxlIChjMCA8IGN0KSBjW2MwKytdID0gMDtcblx0XHRlbHNlICAgICAgICAgICAgd2hpbGUgKGMwIDwgY3QpIGNbYzArK10gPSBhW2EwKytdO1xuXG5cdFx0d2hpbGUgKGMwIDwgYzEpIGNbYzArK10gPSBhW2F0KytdICYgYltiMCsrXTtcblxuXHR9O1xuXG59XG5cblxuXG5cbi8qKlxuICogTElUVExFIEVORElBTiBCSU5BUlkgYW5kIEFQUExJRUQgT04gYSBBTkQgYlxuICpcbiAqIE1lYW5pbmdmdWwgb25seSB3aGVuIHIgaXMgYSBwb3dlciBvZiAyLlxuICpcbiAqIHxhfCA+PSB8YnwgPiAwXG4gKlxuICogdHJlYXRzIGIgYXMgaWYgaXQgd2FzIHJlcHJlc2VudGVkIHdpdGggdGhlIHNhbWUgbnVtYmVyIG9mIGJsb2NrcyBhcyBhXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGxhbmRfdCAocil7XG5cblx0dmFyIF9yID0gciAvIDI7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChhLCBhMCwgYTEsIGIsIGIwLCBiMSwgYywgYzAsIGMxKSB7XG5cblx0XHR2YXIgY3QgPSBjMCArIGIxIC0gYjA7XG5cblx0XHR3aGlsZSAoYzAgPCBjdCkgY1tjMCsrXSA9IGFbYTArK10gJiBiW2IwKytdO1xuXG5cdFx0aWYgKGJbYjAgLSAxXSA8IF9yKSB3aGlsZSAoYzAgPCBjMSkgY1tjMCsrXSA9IDA7XG5cdFx0ZWxzZSAgICAgICAgICAgICAgICB3aGlsZSAoYzAgPCBjMSkgY1tjMCsrXSA9IGFbYTArK107XG5cblxuXHR9O1xuXG59XG4iXX0=